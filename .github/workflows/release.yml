name: Build artifacts

on: workflow_dispatch

jobs:
  build-on-windows:
    runs-on: windows-latest

    outputs:
      is_release: ${{ steps.release_info.outputs.is_release }}
      version: ${{ steps.version_info.outputs.version }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Release Info
      id: release_info
      run: |
        IS_RELEASE_COMMIT_MESSAGE=${{ startsWith(github.event.head_commit.message, 'release:') }}
        echo "::set-output name=is_release_commit_message::$IS_RELEASE_COMMIT_MESSAGE"
        if [[ $IS_RELEASE_COMMIT_MESSAGE == 'true' ]] && [[ $GITHUB_REF =~ ^refs\/heads\/(master|[0-9]+?\.[0-9]+?\.x)$ ]]; \
        then echo "::set-output name=is_release::true"; \
        else echo "::set-output name=is_release::false"; \
        fi

    - name: Install npm dependencies
      run: npm run bootstrap:ci

    - name: Version Info
      if: ${{ steps.release_info.outputs.is_release == 'true' }}
      id: version_info
      run: |
        version=$(cat lerna.json | jq .version -r)
        echo "::set-output name=version::$version"
        if [[ $version =~ ^[0-9]+?\.[0-9]+?\.[0-9]+?$ ]]; \
        then echo "::set-output name=is_prerelease::false"; \
        else echo "::set-output name=is_prerelease::true"; \
        fi

    - name: Build the packages
      run: npm run build

    - name: Test the packages
      run: npm run test

    - name: Build Electron app on windows
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npm run build:win

    - name: Add install Emulator install kit to artifacts
      uses: actions/upload-artifact@v2
      with:
        name: 
        path: artifacts/*.exe


