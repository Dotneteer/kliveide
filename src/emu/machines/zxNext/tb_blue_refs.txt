MACHINE_IS_TBBLUE:

diviface.c: 
    void diviface_enable(char *romfile)

codepred.c: 
    Extra ED instructions (Z80N)

contend.c: 
    void inicializa_tabla_contend(void)

multiface.c:
    void multiface_enable(void)
    void multiface_disable(void)

core_spectrum.c:
    void t_scanline_next_fullborder(void)
    void core_spectrum_store_rainbow_current_atributes(void)
    void core_spectrum_fin_frame_pantalla(void) // End screen frame
    void core_spectrum_ciclo_fetch(void) // Instruction fetch cycle
        - raster trigger
        - raster interrupt handling
        - copper opcode handling
        - RTC traps

cpu.c:
    void cold_start_cpu_registers(void)
    void hard_reset_cpu(void)
    void reset_cpu(void)
    void malloc_mem_machine(void)
    void set_machine_params(void)
    void rom_load(char *romfilename)

datagear.c: 
    void datagear_write_value(z80_byte value)
    void datagear_handle_dma(void)

disassemble.c:
    void debugger_handle_extended_tbblue_opcodes(char *buffer, unsigned int address, int *sumar_longitud)

ds1307.c:
    z80_byte ds1307_get_register(z80_byte index) // real time clock chip (very old)


timex.c:
    void set_timex_port_ff(z80_byte value)

mem128.c:
    z80_byte *get_base_mem_pantalla_continue(void) // screen memory 

operaciones.c:
    z80_byte idle_bus_port(z80_int puerto)
    z80_byte lee_puerto_spectrum_no_time(z80_byte puerto_h,z80_byte puerto_l) // Read I/O port value
    void out_port_spectrum_border(z80_int puerto,z80_byte value) // Border handling
    void out_port_spectrum_no_time(z80_int puerto,z80_byte value) // Write I/O port

snapshot.c:
    void load_sna_snapshot(char *archivo) // Hanlde .sna file loading

snap_zsf.c:
    void save_zsf_snapshot_file_mem(char *filename,z80_byte *destination_memory,int *longitud_total,int from_zeng_online) // Zesarux snapshot file format

exdos_handler.c:
    void esxdos_handler_call_f_open(void)
    void esxdos_handler_begin_handling_commands(void)

mmc.c:
    z80_byte mmc_read(void)

tape.c:
    int tap_load_detect(void) // Detecting tape load mode
    int tap_save_detect(void) // Datacting tape save mode

ula.c:
    void generate_nmi_prepare_fetch(void)

ulaplus.c:
    void enable_ulaplus(void)

utils.c:
    int get_rom_size(int machine)
    int get_ram_size(void)
    void quickload_standard_tape(char *nombre)
    int quickload(char *nombre)
    unsigned int machine_get_memory_zone_attrib(int zone, int *readwrite)
    z80_byte *machine_get_memory_zone_pointer(int zone, int address)
    void machine_get_memory_zone_name(int zone, char *name) // Start with this to understand memory methods

screen.c:
    void recalcular_get_total_ancho_rainbow(void) // re-calculate rainbow width
    void recalcular_get_total_alto_rainbow(void) // re-calculate rainbow height
    void scr_putpixel_zoom_mas_de_uno(int x,int y,unsigned int color) // zoom is more than operaciones
    void scr_putpixel_zoom_uno(int x,int y,unsigned int color) // zoom is one
    void scr_return_margenxy_rainbow(int *margenx_izq,int *margeny_arr)
    void scr_refresca_pantalla_timex_512x192(void) // refresh screen
    void screen_store_scanline_rainbow_border_comun(z80_int *puntero_buf_rainbow,int xinicial)
    void screen_store_scanline_rainbow_solo_display(void)
    void screen_store_scanline_rainbow_solo_border(void)
    int screen_get_emulated_display_width_no_zoom(void)
    int screen_get_emulated_display_height_no_zoom(void)
    int screen_get_emulated_display_width_no_zoom_border_en(void)
    int screen_get_emulated_display_height_no_zoom_bottomborder_en(void)
    void screen_text_printchar_next(z80_byte caracter, void (*puntero_printchar_caracter) (z80_byte)  )
    char *get_spectrum_ula_string_video_mode(void)

scrbdev.c:
    void scrfbdev_refresca_pantalla(void)

scrsdl.c:    
    void scrsdl_refresca_pantalla(void)

scrsdl2.c:
    void scrsdl_refresca_pantalla(void)

scrxwindows.c:
    void scrxwindows_refresca_pantalla(void)

remote.c:
    void interpreta_comando(char *comando,int misocket,char *buffer_lectura_socket_anterior,int *remote_salir_conexion_cliente,char *ip_source_address)

zxvision.c:
    char **old_menu_ext_desktop_draw_configurable_icon_return_machine_icon(void)
    void menu_retorna_margenes_border(int *miz, int *mar) // returns margins
    void set_menu_gui_zoom(void)
    


