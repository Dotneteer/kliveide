/**
 * Token types for the lexer
 */
export enum TokenType {
  Eof = -1,
  Ws = -2,
  BlockComment = -3,
  EolComment = -4,
  Unknown = 0,

  // --- Binding Expression specific tokens
  LParent,
  RParent,

  Identifier,

  Exponent,
  Divide,
  Multiply,
  Remainder,
  Plus,
  Minus,
  BitwiseXor,
  BitwiseOr,
  LogicalOr,
  BitwiseAnd,
  LogicalAnd,
  IncOp,
  DecOp,
  Assignment,

  AddAssignment,
  SubtractAssignment,
  ExponentAssignment,
  MultiplyAssignment,
  DivideAssignment,
  RemainderAssignment,
  ShiftLeftAssignment,
  ShiftRightAssignment,
  SignedShiftRightAssignment,
  BitwiseAndAssignment,
  BitwiseXorAssignment,
  BitwiseOrAssignment,
  LogicalAndAssignment,
  LogicalOrAssignment,
  NullCoalesceAssignment,

  Semicolon,
  Comma,
  Colon,
  LSquare,
  RSquare,
  QuestionMark,
  NullCoalesce,
  OptionalChaining,
  BinaryNot,
  LBrace,
  RBrace,
  Equal,
  StrictEqual,
  LogicalNot,
  NotEqual,
  StrictNotEqual,
  LessThan,
  LessThanOrEqual,
  ShiftLeft,
  GreaterThan,
  GreaterThanOrEqual,
  ShiftRight,
  SignedShiftRight,
  Dot,
  Spread,
  Global,
  Arrow,

  DecimalLiteral,
  HexadecimalLiteral,
  BinaryLiteral,
  RealLiteral,
  StringLiteral,
  Infinity,
  NaN,
  True,
  False,

  Typeof,
  Null,
  Undefined,
  In,

  Let,
  Const,
  If,
  Else,
  Return,
  Break,
  Continue,
  Do,
  While,
  For,
  Of,
  Try,
  Catch,
  Finally,
  Throw,
  Switch,
  Case,
  Default,
  Delete,
  Function,
  Export,
  Import,
}
