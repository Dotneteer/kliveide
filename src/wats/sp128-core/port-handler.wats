// ============================================================================
// Port handler for ZX Spectrum 128
// ============================================================================

// Handles port writes to the memory paging port
void handleMemoryPagingPort(u8 v) {
  if (!memoryPagingEnabled) {
    // --- Paging is not enabled
    return;
  }

  // --- Handle block #6 and #7
  local u32 pageOffset = ((v & 0x07) << 14) + BANK_0_OFFSET;
  setMemoryBlockEntry(6, pageOffset, v & 0x01, false);
  setMemoryBlockEntry(7, pageOffset + 0x2000, v & 0x01, false);

  // --- Handle shadow screen
  if (v & 0x08) {
    memoryUseShadowScreen = true;
    memoryScreenOffset = BANK_7_OFFSET;
  } else {
    memoryUseShadowScreen = false;
    memoryScreenOffset = BANK_5_OFFSET;
  }

  // --- Set ROM index
  if (v & 0x10) {
    setMemoryBlockEntry(0, ROM_1_OFFSET, false, true);
    setMemoryBlockEntry(1, ROM_1_OFFSET + 0x2000, false, true);
    memorySelectedRom = 1;
  } else {
    setMemoryBlockEntry(0, ROM_0_OFFSET, false, true);
    setMemoryBlockEntry(1, ROM_0_OFFSET + 0x2000, false, true);
    memorySelectedRom = 0;
  }

  // --- Paging enabled flag
  memoryPagingEnabled = !(v & 0x20);
}
