// ZX Spectrum allows clock changes when the tape is passive
bool allowCpuClockChange () {
  return !tapeMode;
}

// Event handler for a new frame initialization
// Here, ZX Spectrum initializes the rendering of the next screen
// frame and resets the audio samples buffer.
inline void onInitNewFrame(u32 oldClockMultiplier) {
  // --- Reset pointers used for screen rendering
  local u32 overflow = lastRenderedFrameTact;
  renderingTablePtr = &renderingTactTable;
  pixelBufferPtr = &pixelRenderingBuffer + borderLeftPixels;

  // --- Render the overflown part of the screen
  renderScreen(overflow);

  // --- Calculate flash phase
  if (!(frameCount % flashFrames)) {
    flashPhase ^= 0x01;
  }

  // --- Reset beeper frame state
  if (oldClockMultiplier != clockMultiplier) {
    setAudioSampleRate(audioSampleRate);
  }
  audioSampleCount = 0;
}

// The execution engine has just executed a CPU cycle
void afterCpuCycle(u32 frameTact) {
  #if SUPPORTS_PSG
  preparePsgSamples();
  #endif
}

// ZX Spectrum renders the next pixels of the screen 
inline void beforeTerminationCheck(u32 frameTact) {
  renderScreen(frameTact);
}

// Tests if the execution cycle reached the termination point
inline bool testTerminationPoint() {
  if (memorySelectedRom == terminationRom) {
    return pc == terminationPoint;
  }
  return false;
}

// The execution engine is after checking loop termination
inline void afterTerminationCheck() {
  // --- Notify the tape device to check tape hooks
  checkTapeHooks();

  // Is it time to render the next beeper/sound sample?
  if (tacts >= audioNextSampleTact) {
    renderBeeperSample();

    #if SUPPORTS_PSG
    // --- Render next PSG sample
    psgSamplesBuffer[audioSampleCount] = psgOrphanSamples 
      ? psgOrphanSum/psgOrphanSamples/3
      : 0;
    psgOrphanSum = 0;
    psgOrphanSamples =0;
    #endif

    moveToNextAudioSample();
  }
}

// The execution engine has just completed a frame
inline void onFrameCompleted() {
  // --- The current screen rendering frame completed

  #if SUPPORTS_PSG
  // --- Prepare for the next PSG tact that may overflow to the next frame
  if (psgNextClockTact > tactsInFrame) {
    psgNextClockTact -= tactsInFrame;
  }
  #endif

  // --- Prepare for the next beeper sample rate that may overflow to the next frame
  if (audioNextSampleTact > tacts) {
    audioNextSampleTact -= tactsInFrame * clockMultiplier;
  }
}
