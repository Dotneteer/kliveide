(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[163],{1344:(e,n,i)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/command-reference",function(){return i(7253)}])},7253:(e,n,i)=>{"use strict";i.r(n),i.d(n,{default:()=>l,useTOC:()=>a});var s=i(4848),d=i(7849),t=i(2421),r=i(8023);function a(e){let n={code:"code",...(0,r.R)()};return[{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"bp-ea"})}),id:"bp-ea",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"bp-list"})}),id:"bp-list",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"bp-del"})}),id:"bp-del",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"bp-en"})}),id:"bp-en",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"bp-set"})}),id:"bp-set",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"close"})}),id:"close",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"clh"})}),id:"clh",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"cls"})}),id:"cls",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"compile"})}),id:"compile",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"crd"})}),id:"crd",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"debug"})}),id:"debug",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"dis"})}),id:"dis",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"em-debug"})}),id:"em-debug",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"em-out"})}),id:"em-out",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"em-pause"})}),id:"em-pause",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"em-restart"})}),id:"em-restart",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"em-start"})}),id:"em-start",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"em-sti"})}),id:"em-sti",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"em-sto"})}),id:"em-sto",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"em-stop"})}),id:"em-stop",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"expc"})}),id:"expc",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"hide-disassembly"})}),id:"hide-disassembly",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"hide-memory"})}),id:"hide-memory",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"inject"})}),id:"inject",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"nav"})}),id:"nav",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"newp"})}),id:"newp",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"num"})}),id:"num",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"open"})}),id:"open",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"outp"})}),id:"outp",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"project:excluded-items"})}),id:"projectexcluded-items",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"project:exclude-item"})}),id:"projectexclude-item",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"run"})}),id:"run",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"run-build-function"})}),id:"run-build-function",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"script-cancel"})}),id:"script-cancel",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"script-output"})}),id:"script-output",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"script-run"})}),id:"script-run",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"set"})}),id:"set",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"setl"})}),id:"setl",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"setm"})}),id:"setm",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"show-disassembly"})}),id:"show-disassembly",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"show-memory"})}),id:"show-memory",depth:2},{value:(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.code,{children:"zxb-reset"})}),id:"zxb-reset",depth:2}]}let l=(0,d.e)(function(e){let{toc:n=a(e)}=e,i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{children:"Command Reference"}),"\n",(0,s.jsx)(i.h2,{id:n[0].id,children:n[0].value}),"\n",(0,s.jsx)(i.p,{children:"This command erases all breakpoints already set."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"bp-ea"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"eab"})]}),"\n",(0,s.jsx)(i.h2,{id:n[1].id,children:n[1].value}),"\n",(0,s.jsx)(i.p,{children:"This command lists the breakpoints already set."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"bp-list"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"bpl"})]}),"\n",(0,s.jsx)(i.h2,{id:n[2].id,children:n[2].value}),"\n",(0,s.jsx)(i.p,{children:"This command removes a breakpoint."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"bp-del <address-spec>"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"bd"})]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"address-spec"})," parameter can be"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["a 16-bit address (using the number for the address), for example, ",(0,s.jsx)(i.code,{children:"$120a"})," or ",(0,s.jsx)(i.code,{children:"32768"}),";"]}),"\n",(0,s.jsxs)(i.li,{children:["an address with a partition (the partition and the address separated with a colon), for example, ",(0,s.jsx)(i.code,{children:"r1:$32ac"})," (meaning $32ac, provided ROM 1 is paged in);"]}),"\n",(0,s.jsxs)(i.li,{children:["or a source code line specification, for example, ",(0,s.jsx)(i.code,{children:"[code/code.kz80.asm]"})]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:n[3].id,children:n[3].value}),"\n",(0,s.jsx)(i.p,{children:"This command turns a breakpoint already set on or off."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"bp-en <address-spec> [-d]"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"bd"})]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"address-spec"})," parameter can be"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["a 16-bit address (using the number for the address), for example, ",(0,s.jsx)(i.code,{children:"$120a"})," or ",(0,s.jsx)(i.code,{children:"32768"}),";"]}),"\n",(0,s.jsxs)(i.li,{children:["an address with a partition (the partition and the address separated with a colon), for example, ",(0,s.jsx)(i.code,{children:"r1:$32ac"})," (meaning $32ac, provided ROM 1 is paged in);"]}),"\n",(0,s.jsxs)(i.li,{children:["or a source code line specification, for example, ",(0,s.jsx)(i.code,{children:"[code/code.kz80.asm]"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"-d"})," option disables the breakpoint."]}),"\n",(0,s.jsx)(i.h2,{id:n[4].id,children:n[4].value}),"\n",(0,s.jsx)(i.p,{children:"This command sets a breakpoint."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"bp-set <address-spec>"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"bp"})]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"address-spec"})," parameter can be"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["a 16-bit address (using the number for the address), for example, ",(0,s.jsx)(i.code,{children:"$120a"})," or ",(0,s.jsx)(i.code,{children:"32768"}),";"]}),"\n",(0,s.jsxs)(i.li,{children:["an address with a partition (the partition and the address separated with a colon), for example, ",(0,s.jsx)(i.code,{children:"r1:$32ac"})," (meaning $32ac, provided ROM 1 is paged in);"]}),"\n",(0,s.jsxs)(i.li,{children:["or a source code line specification, for example, ",(0,s.jsx)(i.code,{children:"[code/code.kz80.asm]"})]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:n[5].id,children:n[5].value}),"\n",(0,s.jsx)(i.p,{children:"Use this command to close the folder currently opened in the IDE."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"close"})})})}),"\n",(0,s.jsx)(i.h2,{id:n[6].id,children:n[6].value}),"\n",(0,s.jsx)(i.p,{children:"Use this command to clear the interactive command prompt history."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"clh"})})})}),"\n",(0,s.jsx)(i.h2,{id:n[7].id,children:n[7].value}),"\n",(0,s.jsx)(i.p,{children:"Use this command to clear the interactive command output."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"cls"})})})}),"\n",(0,s.jsx)(i.h2,{id:n[8].id,children:n[8].value}),"\n",(0,s.jsx)(i.p,{children:"This command compiles the code, provided a Klive project is loaded, and a build root file is selected."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"compile"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"co"})]}),"\n",(0,s.jsx)(i.h2,{id:n[9].id,children:n[9].value}),"\n",(0,s.jsx)(i.p,{children:"This command creates an empty disk file (DSK format) you can use with ZX Spectrum +3 models (and compatible)."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"crd <disk-type> <disk-name> [<disk-folder>] [-p]"})})})}),"\n",(0,s.jsx)(i.p,{children:"These are the arguments of the command:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"disk-type"}),": One of these supported formats:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"ss"}),": Single-sided CPC"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"ds"}),": Double-sided CPC"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"sse"}),": Single-sided Extended CPC"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"dse"}),": Double-sided Extended CPC"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"disk-name"}),": The name of the disk file (",(0,s.jsx)(i.code,{children:".dsk"})," extension as added automatically)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"disk-folder"}),": An optional folder in which the new disk file is created. The folder must exist."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-p"}),": Creates the disk file within the currently opened project folder (under ",(0,s.jsx)(i.code,{children:"disks"}),")."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:n[10].id,children:n[10].value}),"\n",(0,s.jsx)(i.p,{children:"This command compiles the code. If the compilation is successful, it injects the code into the current virtual machine and starts it in debug mode. This command requires that a Klive project be loaded."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"debug"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"rd"})]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note"}),": The command will start (or restart) the virtual machine."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:n[11].id,children:n[11].value}),"\n",(0,s.jsx)(i.p,{children:"This command disassembles the specified memory section and displays the disassembly result in a new document pane."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"dis <start> <end> [-d] [-c] [-lc]"})})})}),"\n",(0,s.jsxs)(i.p,{children:["It requires a ",(0,s.jsx)(i.code,{children:"start"})," and an ",(0,s.jsx)(i.code,{children:"end"})," (inclusive) address. Use the ",(0,s.jsx)(i.code,{children:"-d"})," option if you want the disassembly to display addresses, numbers, and instructions with decimal numbers. The ",(0,s.jsx)(i.code,{children:"-c"})," option turns on the concise mode (disassembled bytes are omitted from the output). By default, labels do not end with colons; however, you can turn on this mode with the ",(0,s.jsx)(i.code,{children:"-lc"})," option."]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note"}),": This command does not support bank operations (yet). It can disassemble only the currently paged 64K memory."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:n[12].id,children:n[12].value}),"\n",(0,s.jsx)(i.p,{children:"This command starts the current machine in debug mode."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"em-debug"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:":d"})]}),"\n",(0,s.jsx)(i.h2,{id:n[13].id,children:n[13].value}),"\n",(0,s.jsx)(i.p,{children:"This command executes all instructions until it exits the current subroutine and pauses at the instruction following the subroutine call. It expects the machine to be paused when this command is issued."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"em-out"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:":o"})]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note"}),": If the function returns unconventionally (for example, popping the return address and jumping to it, etc.), this command may not stop the machine."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:n[14].id,children:n[14].value}),"\n",(0,s.jsx)(i.p,{children:"This command pauses (suspends) the current machine."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"em-pause"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:":p"})]}),"\n",(0,s.jsx)(i.h2,{id:n[15].id,children:n[15].value}),"\n",(0,s.jsx)(i.p,{children:"This command restarts (stops, and then starts) the current machine."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"em-restart"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:":r"})]}),"\n",(0,s.jsx)(i.h2,{id:n[16].id,children:n[16].value}),"\n",(0,s.jsx)(i.p,{children:"This command starts the current machine."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"em-start"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:":s"})]}),"\n",(0,s.jsx)(i.h2,{id:n[17].id,children:n[17].value}),"\n",(0,s.jsx)(i.p,{children:"This command executes the next Z80 instruction from the current PC (Program Counter) and pauses the machine again. It expects the machine to be paused when this command is issued."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"em-sti"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:":"})]}),"\n",(0,s.jsx)(i.h2,{id:n[18].id,children:n[18].value}),"\n",(0,s.jsx)(i.p,{children:"This command executes the next Z80 instruction from the current PC (Program Counter). If that instruction is a function call or a block instruction, it executes the entire subroutine or block operation before pausing again. It expects the machine to be paused when this command is issued."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"em-sto"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"."})]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note"}),": If the function call does not return to the instruction following the current instruction at the PC address, the machine won’t pause again (unless it reaches a breakpoint)."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:n[19].id,children:n[19].value}),"\n",(0,s.jsx)(i.p,{children:"This command stops the current machine."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"em-stop"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:":h"})]}),"\n",(0,s.jsx)(i.h2,{id:n[20].id,children:n[20].value}),"\n",(0,s.jsx)(i.p,{children:"This command compiles the code and exports it according to the specified options."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsxs)(i.code,{children:[(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"expc filename [-n name] [-f format] [-as] [-p] [-c] [-b border]"})}),"\n",(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"  [-sb] [-addr address] [-scr screenfile]"})})]})}),"\n",(0,s.jsx)(i.p,{children:"These are the input arguments and options:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"filename"}),": The name of the exported file"]}),"\n",(0,s.jsx)(i.li,{children:"`-n: The name of the program in the exported file. This name will be displayed during the LOAD operation."}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-f"}),": The file format to use:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"hex"}),": Intel HEX format"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"tzx"}),": TZX file format"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"tap"}),": TAP file format"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-as"}),": Autostart the exported code after loading it"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-p"}),": Add a PAUSE statement into the loader (before starting the loaded code)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-c"}),": Add a clear statement to keep the end of the BASIC code before the start address of the exported code"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-b"}),": Specifies the border color to set when the loader program starts"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-sb"}),": The compiled code may contain multiple segments. If this option is used, the exporter merges all code segments into one (filling up the padding code with zeros). Otherwise, each code segment goes into a separate CODE file."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-addr"}),": Specifies the start address of the exported code. The exported extracts this information from the compilation result if not specified. However, you can change the inferred address with this option."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"-scr"}),": You can specify a screen file (TAP or TZX format) to load after the autoloader."]}),"\n"]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note #1"}),": If the compilation fails, no code will be exported."]}),"\n"]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note #2"}),": If you compile code for a ZX Spectrum 128 (or upper) model with multiple bank support, the exporter creates a loader that loads the banks in the compilation (and puts them into the appropriate memory bank) before starting the app."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:n[21].id,children:n[21].value}),"\n",(0,s.jsx)(i.p,{children:"Use this command to hide the machine code disassembly view."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"hide-disassembly"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"hdis"})]}),"\n",(0,s.jsx)(i.h2,{id:n[22].id,children:n[22].value}),"\n",(0,s.jsx)(i.p,{children:"Use this command to hide the memory contents view."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"hide-memory"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"hmem"})]}),"\n",(0,s.jsx)(i.h2,{id:n[23].id,children:n[23].value}),"\n",(0,s.jsx)(i.p,{children:"This command compiles the code, and if the compilation is successful, it injects the code into the current virtual machine. This command requires that a Klive project be loaded and the virtual machine be paused."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"inject"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"inj"})]}),"\n",(0,s.jsx)(i.h2,{id:n[24].id,children:n[24].value}),"\n",(0,s.jsx)(i.p,{children:"This command navigates to the specified project file (to an optional position). If the file is not open yet, the IDE opens it."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"nav projeFile [line] [column]"})})})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"filename"})," argument is a project file name. When you specify the name, use the full name (including the file extension) relative to the project’s root folder. For example, if your file is in the ",(0,s.jsx)(i.code,{children:"code"})," folder and named ",(0,s.jsx)(i.code,{children:"program.zxb"}),", use the ",(0,s.jsx)(i.code,{children:"code/program.zxb"})," parameter."]}),"\n",(0,s.jsxs)(i.p,{children:["You can specify an optional ",(0,s.jsx)(i.code,{children:"line"})," and ",(0,s.jsx)(i.code,{children:"column"})," argument to jump to the specified location within the file."]}),"\n",(0,s.jsx)(i.h2,{id:n[25].id,children:n[25].value}),"\n",(0,s.jsx)(i.p,{children:"This project creates a new Klive project and optionally opens it."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"newp <machine-id> <project-name> [<template>] [-p <project-folder>] [-o]"})})})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"machine-id"}),"  argument specifies the ID of the machine and an optional model. When you specify the machine and model type, use a colon to separate the machine ID from the model ID. For example, use ",(0,s.jsx)(i.code,{children:"sp48"})," for the basic ZX Spectrum 48K model and ",(0,s.jsx)(i.code,{children:"sp48:ntsc"})," to use the NTSC version of ZX Spectrum 48K. See the ",(0,s.jsx)(i.a,{href:"./machine-types",children:"Machine Types"})," article for these IDs."]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"project-name"})," argument defines the project’s name. Unless the optional ",(0,s.jsx)(i.code,{children:"project-folder"})," parameter is specified, the new project is created in the ",(0,s.jsx)(i.code,{children:"KliveProjects"})," folder within your user folder."]}),"\n",(0,s.jsxs)(i.p,{children:["Klive may support multiple project templates for a particular machine type (it provides a default template for each). If you want a specific template, specify its name in the ",(0,s.jsx)(i.code,{children:"template"})," argument. See the ",(0,s.jsx)(i.a,{href:"./project-templates",children:"Project Templates"})," article for more information about available templates."]}),"\n",(0,s.jsxs)(i.p,{children:["By default, the IDE creates a new project but does not open it. However, if you add the ",(0,s.jsx)(i.code,{children:"-o"})," option, the new project will be immediately opened."]}),"\n",(0,s.jsx)(i.h2,{id:n[26].id,children:n[26].value}),"\n",(0,s.jsx)(i.p,{children:"This command displays its argument number in decimal, hexadecimal, and binary formats."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"num <number>"})})})}),"\n",(0,s.jsx)(i.p,{children:"The input argument can be in decimal, hexadecimal, or binary format."}),"\n",(0,s.jsx)(i.h2,{id:n[27].id,children:n[27].value}),"\n",(0,s.jsx)(i.p,{children:"Use this command to open a folder."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"open [<folder-path>]"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"op"})]}),"\n",(0,s.jsxs)(i.p,{children:["If the ",(0,s.jsx)(i.code,{children:"folder-path"})," argument is omitted, the IDE opens the show folder dialog to select a project folder. Otherwise, the IDE opens the project you specified. If the folder path is relative, the IDE loads the folder within your user directory’s ",(0,s.jsx)(i.code,{children:"KliveProjects"})," folder."]}),"\n",(0,s.jsx)(i.h2,{id:n[28].id,children:n[28].value}),"\n",(0,s.jsx)(i.p,{children:"You can select a particular output pane with this command."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"outp <paneId>"})})})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"paneId"})," argument can be one of the available output panes (",(0,s.jsx)(i.code,{children:"emu"}),", ",(0,s.jsx)(i.code,{children:"build"}),", or ",(0,s.jsx)(i.code,{children:"script"}),")."]}),"\n",(0,s.jsx)(i.h2,{id:n[29].id,children:n[29].value}),"\n",(0,s.jsxs)(i.p,{children:["This command lists the definitions of excluded project items. You can use the ",(0,s.jsx)(i.code,{children:"-global"})," option to list the items that are excluded globally."]}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"project:excluded-items [-global]"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"project:list-excluded"}),", ",(0,s.jsx)(i.code,{children:"proj:excluded-items"}),", ",(0,s.jsx)(i.code,{children:"proj:list-excluded"}),", ",(0,s.jsx)(i.code,{children:"p:lx"})]}),"\n",(0,s.jsx)(i.h2,{id:n[30].id,children:n[30].value}),"\n",(0,s.jsxs)(i.p,{children:["This command adds or deletes excluded project items. You can use the ",(0,s.jsx)(i.code,{children:"-global"})," option to list the items that are excluded globally. The ",(0,s.jsx)(i.code,{children:"-d"})," option signs that the defined option should be deleted from the exclusion list. You can specify multiple items to add or delete."]}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"project:exclude-item [--global] [-d] <item-path-1> ... <item-path-n>"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"project:exclude"}),", ",(0,s.jsx)(i.code,{children:"proj:exclude-item"}),", ",(0,s.jsx)(i.code,{children:"proj:exclude"}),", ",(0,s.jsx)(i.code,{children:"p:x"})]}),"\n",(0,s.jsx)(i.h2,{id:n[31].id,children:n[31].value}),"\n",(0,s.jsx)(i.p,{children:"This command compiles the code. If the compilation is successful, it injects the code into the current virtual machine and starts it. This command requires that a Klive project be loaded."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"run"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"r"})]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note"}),": The command will start (or restart) the virtual machine."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:n[32].id,children:n[32].value}),"\n",(0,s.jsxs)(i.p,{children:["This command starts the build command function (see the ",(0,s.jsx)(i.code,{children:"build.ksx"})," file) named in the command argument."]}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"run-build-function <function-name>"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"rbf"})]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"build.ksx"})," file contains several commands, such as ",(0,s.jsx)(i.code,{children:"buildCode"}),", ",(0,s.jsx)(i.code,{children:"injectCode"}),", ",(0,s.jsx)(i.code,{children:"runCode"}),", ",(0,s.jsx)(i.code,{children:"debugCode"}),", and ",(0,s.jsx)(i.code,{children:"exportCode"}),". Some projects may have additional custom commands."]}),"\n",(0,s.jsx)(i.h2,{id:n[33].id,children:n[33].value}),"\n",(0,s.jsx)(i.p,{children:"This command runs the script file specified in the argument."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"script-cancel <script-file-path-or-script-id>"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"sc"})]}),"\n",(0,s.jsx)(i.p,{children:"You can provide a script file name or a script ID as an argument. When you start a script, the ID of the running script is displayed. You can also get a particular script’s ID from the Script History panel."}),"\n",(0,s.jsxs)(i.p,{children:["When you specify a file name, use the full name (including the ",(0,s.jsx)(i.code,{children:".ksx"})," file extension) relative to the project’s root folder. For example, if your script is in the ",(0,s.jsx)(i.code,{children:"scripts"})," folder and named ",(0,s.jsx)(i.code,{children:"myScript.ksx"}),", use the ",(0,s.jsx)(i.code,{children:"scripts/myScript.ksx"})," parameter."]}),"\n",(0,s.jsx)(i.h2,{id:n[34].id,children:n[34].value}),"\n",(0,s.jsx)(i.p,{children:"This command navigates to the output document of the specified script."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"script-output <script-id>"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"so"})]}),"\n",(0,s.jsx)(i.p,{children:"You must provide a script ID as an argument. When you start a script, the ID of the running script is displayed. You can also get a particular script’s ID from the Script History panel."}),"\n",(0,s.jsx)(i.h2,{id:n[35].id,children:n[35].value}),"\n",(0,s.jsx)(i.p,{children:"This command runs the script file specified in the argument."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"script-run <script-file-path>"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"sr"})]}),"\n",(0,s.jsxs)(i.p,{children:["Provide the full file name (including the ",(0,s.jsx)(i.code,{children:".ksx"})," file extension) relative to the project’s root folder. For example, if your script is in the ",(0,s.jsx)(i.code,{children:"scripts"})," folder and named ",(0,s.jsx)(i.code,{children:"myScript.ksx"}),", use the ",(0,s.jsx)(i.code,{children:"scripts/myScript.ksx"})," parameter."]}),"\n",(0,s.jsx)(i.h2,{id:n[36].id,children:n[36].value}),"\n",(0,s.jsx)(i.p,{children:"You can use this comment to set or delete a particular Klive setting."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"set [-p] [-u] <key> [<value>] "})})})}),"\n",(0,s.jsxs)(i.p,{children:["Use the ",(0,s.jsx)(i.code,{children:"-p"})," option to set a project setting or ",(0,s.jsx)(i.code,{children:"-u"})," for a user setting. ",(0,s.jsx)(i.code,{children:"<key>"})," is the setting key, ",(0,s.jsx)(i.code,{children:"<value>"})," is the new setting value. The specified key is removed if you omit ",(0,s.jsx)(i.code,{children:"<value>"}),"."]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note"}),": Project settings are saved in the currently open project file, while user settings are saved in the ",(0,s.jsx)(i.code,{children:"Klive/live.settings"})," file under your user folder."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["If you do not specify the context (with ",(0,s.jsx)(i.code,{children:"-p"})," or ",(0,s.jsx)(i.code,{children:"-u"}),"), the IDE will save a project setting, provided a project is open; otherwise, it saves a user-level setting."]}),"\n",(0,s.jsx)(i.h2,{id:n[37].id,children:n[37].value}),"\n",(0,s.jsx)(i.p,{children:"This command lists the specified settings."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"setl [-p] [-u] [<setting>] "})})})}),"\n",(0,s.jsxs)(i.p,{children:["Use the ",(0,s.jsx)(i.code,{children:"-p"})," option to list project settings or ",(0,s.jsx)(i.code,{children:"-u"})," for user settings. By default, all settings in the specified bucket are listed. Additionally, you can specify a setting prefix in ",(0,s.jsx)(i.code,{children:"<setting>"}),". In this case, only matching settings are listed."]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note"}),": Project settings are saved in the currently open project file, while user settings are saved in the ",(0,s.jsx)(i.code,{children:"Klive/live.settings"})," file under your user folder."]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["If you do not specify the context (with ",(0,s.jsx)(i.code,{children:"-p"})," or ",(0,s.jsx)(i.code,{children:"-u"}),"), the IDE will list project settings, provided a project is open; otherwise, it lists user-level settings."]}),"\n",(0,s.jsx)(i.h2,{id:n[38].id,children:n[38].value}),"\n",(0,s.jsx)(i.p,{children:"This command lists the specified settings."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"setl [-pull] [-push] [-c] "})})})}),"\n",(0,s.jsxs)(i.p,{children:["This command moves settings from the user setting file to the current project file (",(0,s.jsx)(i.code,{children:"-pull"}),") or vice versa (",(0,s.jsx)(i.code,{children:"push"}),"). The additional ",(0,s.jsx)(i.code,{children:"-c"})," option copies the settings instead of moving them."]}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note"}),": You can use either ",(0,s.jsx)(i.code,{children:"-pull"})," or ",(0,s.jsx)(i.code,{children:"push"}),". This command works only when a Klive project is open in the IDE."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:n[39].id,children:n[39].value}),"\n",(0,s.jsx)(i.p,{children:"Use this command to display the machine code disassembly view."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"show-disassembly"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"shdis"})]}),"\n",(0,s.jsx)(i.h2,{id:n[40].id,children:n[40].value}),"\n",(0,s.jsx)(i.p,{children:"Use this command to display the memory contents view."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"show-memory"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"shmem"})]}),"\n",(0,s.jsx)(i.h2,{id:n[41].id,children:n[41].value}),"\n",(0,s.jsx)(i.p,{children:"Use this command to set ZXBASIC integration."}),"\n",(0,s.jsx)(i.pre,{tabIndex:"0","data-language":"plaintext","data-word-wrap":"",children:(0,s.jsx)(i.code,{children:(0,s.jsx)(i.span,{children:(0,s.jsx)(i.span,{children:"zxb-reset <Full ZXBC executable path> [<python3 path>] [<start of machine code>]"})})})}),"\n",(0,s.jsxs)(i.p,{children:["Available aliases: ",(0,s.jsx)(i.code,{children:"zxbr"})]}),"\n",(0,s.jsxs)(i.p,{children:["Provide the full executable path of the ZXBC compiler. Optionally, you can provide the path to the Python3 executable and the start of the machine code. See the ",(0,s.jsx)(i.a,{href:"/working-with-ide/zxb",children:"ZXBASIC integration"})," article for more information."]})]})},"/command-reference",{filePath:"pages/command-reference.mdx",pageMap:t.O,frontMatter:{},title:"Command Reference"},"undefined"==typeof RemoteContent?a:RemoteContent.useTOC)},2421:(e,n,i)=>{"use strict";i.d(n,{O:()=>s});let s=[{data:{index:"Introduction","getting-started":"Getting Started","working-with-ide":"Working with the IDE",howto:"How To","z80-assembly":"Klive Z80 Assembler",scripting:"Scripting","command-reference":"Command Reference","machine-types":"Machine Types"}},{name:"command-reference",route:"/command-reference",frontMatter:{sidebarTitle:"Command Reference"}},{name:"getting-started",route:"/getting-started",children:[{data:{installation:"Installing Klive","first-run":"Running Klive",keyboard:"Using the Keyboard",tapes:"Loading from Tape","save-programs":"Saving Files","creating-project":"Creating a Klive Project"}},{name:"creating-project",route:"/getting-started/creating-project",frontMatter:{sidebarTitle:"Creating Project"}},{name:"first-run",route:"/getting-started/first-run",frontMatter:{sidebarTitle:"First Run"}},{name:"installation",route:"/getting-started/installation",frontMatter:{sidebarTitle:"Installation"}},{name:"keyboard",route:"/getting-started/keyboard",frontMatter:{sidebarTitle:"Keyboard"}},{name:"save-programs",route:"/getting-started/save-programs",frontMatter:{sidebarTitle:"Save Programs"}},{name:"tapes",route:"/getting-started/tapes",frontMatter:{sidebarTitle:"Tapes"}}]},{name:"howto",route:"/howto",children:[{data:{"file-extensions":"Changing default file extensions","instant-screen":"Using the Instant Screen"}},{name:"file-extensions",route:"/howto/file-extensions",frontMatter:{sidebarTitle:"File Extensions"}},{name:"instant-screen",route:"/howto/instant-screen",frontMatter:{sidebarTitle:"Instant Screen"}}]},{name:"index",route:"/",frontMatter:{sidebarTitle:"Index"}},{name:"machine-types",route:"/machine-types",frontMatter:{sidebarTitle:"Machine Types"}},{name:"project-templates",route:"/project-templates",frontMatter:{sidebarTitle:"Project Templates"}},{name:"scripting",route:"/scripting",children:[{data:{overview:"Overview",syntax:"Scripting Syntax"}},{name:"overview",route:"/scripting/overview",frontMatter:{sidebarTitle:"Overview"}},{name:"syntax",route:"/scripting/syntax",frontMatter:{sidebarTitle:"Syntax"}}]},{name:"working-with-ide",route:"/working-with-ide",children:[{data:{"project-explorer":"The Project Explorer","editing-code":"Editing Code","run-debug":"Running & Debugging Code",zxb:"ZXBASIC Integration","ide-settings":"IDE Settings",cpu:"The CPU View",ula:"The ULA View",memory:"The Memory View",disassembly:"The Disassembly View",breakpoints:"The Breakpoints View","system-vars":"The System Variables View",basic:"The BASIC Listing",commands:"Interactive Commands","build-system":"The Build System"}},{name:"basic",route:"/working-with-ide/basic",frontMatter:{sidebarTitle:"Basic"}},{name:"breakpoints",route:"/working-with-ide/breakpoints",frontMatter:{sidebarTitle:"Breakpoints"}},{name:"build-system",route:"/working-with-ide/build-system",frontMatter:{sidebarTitle:"Build System"}},{name:"commands",route:"/working-with-ide/commands",frontMatter:{sidebarTitle:"Commands"}},{name:"cpu",route:"/working-with-ide/cpu",frontMatter:{sidebarTitle:"Cpu"}},{name:"disassembly",route:"/working-with-ide/disassembly",frontMatter:{sidebarTitle:"Disassembly"}},{name:"editing-code",route:"/working-with-ide/editing-code",frontMatter:{sidebarTitle:"Editing Code"}},{name:"ide-settings",route:"/working-with-ide/ide-settings",frontMatter:{sidebarTitle:"Ide Settings"}},{name:"memory",route:"/working-with-ide/memory",frontMatter:{sidebarTitle:"Memory"}},{name:"project-explorer",route:"/working-with-ide/project-explorer",frontMatter:{sidebarTitle:"Project Explorer"}},{name:"run-debug",route:"/working-with-ide/run-debug",frontMatter:{sidebarTitle:"Run Debug"}},{name:"system-vars",route:"/working-with-ide/system-vars",frontMatter:{sidebarTitle:"System Vars"}},{name:"ula",route:"/working-with-ide/ula",frontMatter:{sidebarTitle:"Ula"}},{name:"zxb",route:"/working-with-ide/zxb",frontMatter:{sidebarTitle:"Zxb"}}]},{name:"z80-assembly",route:"/z80-assembly",children:[{data:{"z80-assembler":"Assembler Overview","language-structure":"Language Structure",expressions:"Expressions","z80-instructions":"Z80 Instructions",pragmas:"Pragmas",statements:"Assembler Statements",macros:"Macros",structs:"Structs"}},{name:"expressions",route:"/z80-assembly/expressions",frontMatter:{sidebarTitle:"Expressions"}},{name:"language-structure",route:"/z80-assembly/language-structure",frontMatter:{sidebarTitle:"Language Structure"}},{name:"macros",route:"/z80-assembly/macros",frontMatter:{sidebarTitle:"Macros"}},{name:"pragmas",route:"/z80-assembly/pragmas",frontMatter:{sidebarTitle:"Pragmas"}},{name:"statements",route:"/z80-assembly/statements",frontMatter:{sidebarTitle:"Statements"}},{name:"structs",route:"/z80-assembly/structs",frontMatter:{sidebarTitle:"Structs"}},{name:"z80-assembler",route:"/z80-assembly/z80-assembler",frontMatter:{sidebarTitle:"Z80 Assembler"}},{name:"z80-instructions",route:"/z80-assembly/z80-instructions",frontMatter:{sidebarTitle:"Z80 Instructions"}}]}]}},e=>{var n=n=>e(e.s=n);e.O(0,[849,636,593,792],()=>n(1344)),_N_E=e.O()}]);