(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9540],{289:e=>{e.exports={container:"ClickableImage_container__GtwVc",imageLink:"ClickableImage_imageLink__rDd_l",image:"ClickableImage_image__ljXcs",default:"ClickableImage_default__czrP7"}},413:(e,t,r)=>{"use strict";r.d(t,{A:()=>o,w:()=>s});var i=r(7876);r(4232);var a=r(289),n=r.n(a);let s=e=>{let{src:t,alt:r,width:a,height:s,className:o="",style:d={}}=e,l=[n().image,n().default,o].filter(Boolean).join(" "),c={...a&&{width:"string"==typeof a&&/^\d+$/.test(a)?"".concat(a,"px"):a},...s?{height:"string"==typeof s&&/^\d+$/.test(s)?"".concat(s,"px"):s}:{height:"auto"},...d},u=(e=>{if(e.startsWith("http")||e.startsWith("data:"))return e;let t="/kliveide";return e.startsWith(t)?e:e.startsWith("/")?"".concat(t).concat(e):"".concat(t,"/").concat(e)})(t);return(0,i.jsx)("div",{className:n().container,children:(0,i.jsx)("a",{href:u,target:"_blank",rel:"noopener noreferrer",className:n().imageLink,children:(0,i.jsx)("img",{src:u,alt:r,className:l,style:c})})})},o=s},1217:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>c,useTOC:()=>l});var i=r(7876),a=r(1807),n=r(8964),s=r(9707),o=r(9941),d=r(413);function l(e){return[{value:"ZX BASIC Files",id:"zx-basic-files",depth:2},{value:"Using ZX BASIC",id:"using-zx-basic",depth:2},{value:"Handling Errors",id:"handling-errors",depth:2},{value:"Debugging",id:"debugging",depth:2}]}let c=(0,a.e)(function(e){let{toc:t=l(e)}=e,r={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{children:"Using ZX BASIC"}),"\n",(0,i.jsx)(r.p,{children:"The ZX Spectrum was famous for its BASIC interpreter, which was significantly faster than other home computers’ BASIC variants in 1982. However, the compiled variants that emerged later were much faster. BASIC became a viable alternative to writing games and applications in assembly language."}),"\n",(0,i.jsx)(r.p,{children:"With the ZX BASIC extensions, including graphics utilities, user-defined functions, and a powerful array handling facility, developers could create useful programs, including animation and sound effects."}),"\n",(0,i.jsx)(r.p,{children:"However, BASIC still ran as an interpreted language, which means the computer had to process the source code line by line, which limited the execution speed of BASIC programs. This issue, and the emergence of BASIC compilers, including HiSoft BASIC, gave birth to new possibilities."}),"\n",(0,i.jsxs)(r.p,{children:["Boriel’s ZX BASIC (you can find it ",(0,i.jsx)(r.a,{href:"https://zxbasic.readthedocs.io/en/docs/",children:"here"}),") is a BASIC dialect similar to the original Sinclair BASIC. It fixes many issues found in the original language, such as proper subroutine handling and local variables. It compiles BASIC source code to Z80 binary code, which runs much faster than interpreted BASIC."]}),"\n",(0,i.jsx)(r.p,{children:"Klive supports Boriel’s ZX BASIC with an extension that allows you to write BASIC source code and create ZX Spectrum executables."}),"\n",(0,i.jsx)(r.h2,{id:t[0].id,children:t[0].value}),"\n",(0,i.jsxs)(r.p,{children:["Files with the ",(0,i.jsx)(r.code,{children:".bas"})," extension are automatically recognized as ZX BASIC files. You can open a Klive project and create a new ZX BASIC source file:"]}),"\n",(0,i.jsx)(d.A,{src:"/images/working-with-ide/zxb-reset.png",width:770}),"\n",(0,i.jsx)(r.h2,{id:t[1].id,children:t[1].value}),"\n",(0,i.jsxs)(r.p,{children:["When you create a ZX BASIC file, you can write your source code using ZX BASIC syntax. When you open a ",(0,i.jsx)(r.code,{children:".bas"})," file, you can see four build-related icons in the document tab bar:"]}),"\n",(0,i.jsx)(d.A,{src:"/images/working-with-ide/zxb-actions.png",width:725}),"\n",(0,i.jsx)(r.p,{children:"Click the rightmost icon (with the “play” sign) to compile and run the code:"}),"\n",(0,i.jsx)(d.A,{src:"/images/working-with-ide/zxb-running.png",width:480}),"\n",(0,i.jsx)(o.P,{type:"info",emoji:"\uD83D\uDCA1",children:(0,i.jsxs)(r.p,{children:["You can also try keyboard shortcuts to trigger these actions: ",(0,i.jsx)(r.code,{children:"F7"})," to compile, ",(0,i.jsx)(r.code,{children:"Ctrl+F7"})," to inject code into memory, ",(0,i.jsx)(r.code,{children:"Shift+F7"})," to run the code, and ",(0,i.jsx)(r.code,{children:"Ctrl+Shift+F7"})," to run it in debug mode."]})}),"\n",(0,i.jsx)(r.h2,{id:t[2].id,children:t[2].value}),"\n",(0,i.jsx)(r.p,{children:"When you run the code, the compiler checks the syntax. If there are any errors, the IDE displays them in a list in the Output panel. You can click an error to navigate to its location in the source code."}),"\n",(0,i.jsx)(r.h2,{id:t[3].id,children:t[3].value}),"\n",(0,i.jsxs)(r.p,{children:["You can run your code in debug mode by clicking the last icon in the document tab bar or pressing ",(0,i.jsx)(r.code,{children:"Ctrl+Shift+F7"}),". In debug mode, the IDE will stop at any breakpoints you set in your code."]})]})},"/working-with-ide/zxb",{filePath:"pages/working-with-ide/zxb.mdx",timestamp:1752407163e3,pageMap:n.O,frontMatter:{},title:"Using ZX BASIC"},"undefined"==typeof RemoteContent?l:RemoteContent.useTOC)},4828:(e,t,r)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/working-with-ide/zxb",function(){return r(1217)}])},8964:(e,t,r)=>{"use strict";r.d(t,{O:()=>i});let i=[{data:{index:"Introduction","getting-started":"Getting Started","working-with-ide":"Working with the IDE",howto:"How To","z80-assembly":"Klive Z80 Assembler",contribute:"Contribute",scripting:"Scripting","commands-reference":"Commands Reference","machine-types":"Machine Types"}},{name:"commands-reference",route:"/commands-reference",frontMatter:{sidebarTitle:"Commands Reference"}},{name:"contribute",route:"/contribute",children:[{data:{"get-source":"Get the source code","improve-docs":"Improve the documentation"}},{name:"get-source",route:"/contribute/get-source",frontMatter:{sidebarTitle:"Get Source"}},{name:"improve-docs",route:"/contribute/improve-docs",frontMatter:{sidebarTitle:"Improve Docs"}}]},{name:"getting-started",route:"/getting-started",children:[{data:{installation:"Installing Klive","first-run":"Running Klive",keyboard:"Using the Keyboard",tapes:"Loading from Tape","save-programs":"Saving Files","creating-project":"Creating a Klive Project"}},{name:"creating-project",route:"/getting-started/creating-project",frontMatter:{sidebarTitle:"Creating Project"}},{name:"first-run",route:"/getting-started/first-run",frontMatter:{sidebarTitle:"First Run"}},{name:"installation",route:"/getting-started/installation",frontMatter:{sidebarTitle:"Installation"}},{name:"keyboard",route:"/getting-started/keyboard",frontMatter:{sidebarTitle:"Keyboard"}},{name:"save-programs",route:"/getting-started/save-programs",frontMatter:{sidebarTitle:"Save Programs"}},{name:"tapes",route:"/getting-started/tapes",frontMatter:{sidebarTitle:"Tapes"}}]},{name:"howto",route:"/howto",children:[{data:{"ide-startup":"IDE startup options",diagnostics:"Diagnostics",shortcuts:"Changing keyboard shortcuts","file-extensions":"Changing default file extensions","instant-screen":"Using the Instant Screen","always-on-top":"Keeping the Emulator always on top","measure-t-states":"Measuring T-states"}},{name:"always-on-top",route:"/howto/always-on-top",frontMatter:{sidebarTitle:"Always on Top"}},{name:"diagnostics",route:"/howto/diagnostics",frontMatter:{sidebarTitle:"Diagnostics"}},{name:"file-extensions",route:"/howto/file-extensions",frontMatter:{sidebarTitle:"File Extensions"}},{name:"ide-startup",route:"/howto/ide-startup",frontMatter:{sidebarTitle:"Ide Startup"}},{name:"instant-screen",route:"/howto/instant-screen",frontMatter:{sidebarTitle:"Instant Screen"}},{name:"measure-t-states",route:"/howto/measure-t-states",frontMatter:{sidebarTitle:"Measure T States"}},{name:"shortcuts",route:"/howto/shortcuts",frontMatter:{sidebarTitle:"Shortcuts"}}]},{name:"index",route:"/",frontMatter:{sidebarTitle:"Index"}},{name:"machine-types",route:"/machine-types",frontMatter:{sidebarTitle:"Machine Types"}},{name:"project-templates",route:"/project-templates",frontMatter:{sidebarTitle:"Project Templates"}},{name:"scripting",route:"/scripting",children:[{data:{overview:"Overview",syntax:"Scripting Syntax"}},{name:"overview",route:"/scripting/overview",frontMatter:{sidebarTitle:"Overview"}},{name:"syntax",route:"/scripting/syntax",frontMatter:{sidebarTitle:"Syntax"}}]},{name:"working-with-ide",route:"/working-with-ide",children:[{data:{"project-explorer":"The Project Explorer","editing-code":"Editing Code","run-debug":"Running & Debugging Code","exporting-code":"Exporting Code",zxb:"ZXBASIC Integration",sjasmp:"SJASMPLUS Integration","ide-settings":"IDE Settings",cpu:"The CPU View",ula:"The ULA View",memory:"The Memory View",disassembly:"The Disassembly View",watch:"Watch Expressions",breakpoints:"The Breakpoints View","system-vars":"The System Variables View",basic:"The BASIC Listing",commands:"Interactive Commands","build-system":"The Build System"}},{name:"basic",route:"/working-with-ide/basic",frontMatter:{sidebarTitle:"Basic"}},{name:"breakpoints",route:"/working-with-ide/breakpoints",frontMatter:{sidebarTitle:"Breakpoints"}},{name:"build-system",route:"/working-with-ide/build-system",frontMatter:{sidebarTitle:"Build System"}},{name:"commands",route:"/working-with-ide/commands",frontMatter:{sidebarTitle:"Commands"}},{name:"cpu",route:"/working-with-ide/cpu",frontMatter:{sidebarTitle:"Cpu"}},{name:"disassembly",route:"/working-with-ide/disassembly",frontMatter:{sidebarTitle:"Disassembly"}},{name:"editing-code",route:"/working-with-ide/editing-code",frontMatter:{sidebarTitle:"Editing Code"}},{name:"exporting-code",route:"/working-with-ide/exporting-code",frontMatter:{sidebarTitle:"Exporting Code"}},{name:"ide-settings",route:"/working-with-ide/ide-settings",frontMatter:{sidebarTitle:"Ide Settings"}},{name:"memory",route:"/working-with-ide/memory",frontMatter:{sidebarTitle:"Memory"}},{name:"project-explorer",route:"/working-with-ide/project-explorer",frontMatter:{sidebarTitle:"Project Explorer"}},{name:"run-debug",route:"/working-with-ide/run-debug",frontMatter:{sidebarTitle:"Run Debug"}},{name:"sjasmp",route:"/working-with-ide/sjasmp",frontMatter:{sidebarTitle:"Sjasmp"}},{name:"system-vars",route:"/working-with-ide/system-vars",frontMatter:{sidebarTitle:"System Vars"}},{name:"ula",route:"/working-with-ide/ula",frontMatter:{sidebarTitle:"Ula"}},{name:"watch",route:"/working-with-ide/watch",frontMatter:{sidebarTitle:"Watch"}},{name:"zxb",route:"/working-with-ide/zxb",frontMatter:{sidebarTitle:"Zxb"}}]},{name:"z80-assembly",route:"/z80-assembly",children:[{data:{"z80-assembler":"Assembler Overview","language-structure":"Language Structure",directives:"Directives",expressions:"Expressions","z80-instructions":"Z80 Instructions",pragmas:"Pragmas",statements:"Assembler Statements",macros:"Macros",structs:"Structs"}},{name:"directives",route:"/z80-assembly/directives",frontMatter:{sidebarTitle:"Directives"}},{name:"expressions",route:"/z80-assembly/expressions",frontMatter:{sidebarTitle:"Expressions"}},{name:"language-structure",route:"/z80-assembly/language-structure",frontMatter:{sidebarTitle:"Language Structure"}},{name:"macros",route:"/z80-assembly/macros",frontMatter:{sidebarTitle:"Macros"}},{name:"pragmas",route:"/z80-assembly/pragmas",frontMatter:{sidebarTitle:"Pragmas"}},{name:"statements",route:"/z80-assembly/statements",frontMatter:{sidebarTitle:"Statements"}},{name:"structs",route:"/z80-assembly/structs",frontMatter:{sidebarTitle:"Structs"}},{name:"z80-assembler",route:"/z80-assembly/z80-assembler",frontMatter:{sidebarTitle:"Z80 Assembler"}},{name:"z80-instructions",route:"/z80-assembly/z80-instructions",frontMatter:{sidebarTitle:"Z80 Instructions"}}]}]},9941:(e,t,r)=>{"use strict";r.d(t,{P:()=>d});var i=r(7876),a=r(9241),n=r(87);let s={default:"\uD83D\uDCA1",error:"\uD83D\uDEAB",info:(0,i.jsx)(n.KS,{className:"_mt-1"}),warning:"⚠️"},o={default:(0,a.A)("_border-orange-100 _bg-orange-50 _text-orange-800 dark:_border-orange-400/30 dark:_bg-orange-400/20 dark:_text-orange-300"),error:(0,a.A)("_border-red-200 _bg-red-100 _text-red-900 dark:_border-red-200/30 dark:_bg-red-900/30 dark:_text-red-200"),info:(0,a.A)("_border-blue-200 _bg-blue-100 _text-blue-900 dark:_border-blue-200/30 dark:_bg-blue-900/30 dark:_text-blue-200"),warning:(0,a.A)("_border-yellow-100 _bg-yellow-50 _text-yellow-900 dark:_border-yellow-200/30 dark:_bg-yellow-700/30 dark:_text-yellow-200")};function d({children:e,type:t="default",emoji:r=s[t]}){return(0,i.jsxs)("div",{className:(0,a.A)("nextra-callout _overflow-x-auto _mt-6 _flex _rounded-lg _border _py-2 ltr:_pr-4 rtl:_pl-4","contrast-more:_border-current contrast-more:dark:_border-current",o[t]),children:[(0,i.jsx)("div",{className:"_select-none _text-xl ltr:_pl-3 ltr:_pr-2 rtl:_pr-3 rtl:_pl-2",style:{fontFamily:'"Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"'},children:r}),(0,i.jsx)("div",{className:"_w-full _min-w-0 _leading-7",children:e})]})}}},e=>{e.O(0,[1807,636,6593,8792],()=>e(e.s=4828)),_N_E=e.O()}]);