(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[312],{5374:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/getting-started/tapes",function(){return n(6618)}])},6618:function(e,t,n){"use strict";n.r(t),n.d(t,{__toc:function(){return r}});var a=n(5893),s=n(2673),i=n(7758),l=n(3662);n(9128);var o=n(2643);let r=[{depth:2,value:"Normal and Fast Load",id:"normal-and-fast-load"},{depth:2,value:"Revinding the Tape",id:"revinding-the-tape"},{depth:2,value:"How Fast Load Works",id:"how-fast-load-works"}];function _createMdxContent(e){let t=Object.assign({h1:"h1",p:"p",code:"code",strong:"strong",blockquote:"blockquote",h2:"h2",em:"em"},(0,o.a)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{children:"Loading from Tape"}),"\n",(0,a.jsxs)(t.p,{children:["Klive can emulate playing back tape files with ",(0,a.jsx)(t.code,{children:".tap"})," and ",(0,a.jsx)(t.code,{children:".tzx"})," extensions. Before utilizing them with the ",(0,a.jsx)(t.code,{children:"LOAD"})," Basic command, select them with the ",(0,a.jsx)(t.strong,{children:"Machine | Select Tape File"})," function. This command opens a file selection dialog where you can select a ",(0,a.jsx)(t.code,{children:".tap"})," or ",(0,a.jsx)(t.code,{children:".tzx"})," file. You can select files with other extensions. In that case, the Emulator tries to read them as tape files, trying to parse them."]}),"\n",(0,a.jsxs)(t.p,{children:["On successful read, you can issue a ",(0,a.jsx)(t.code,{children:"LOAD"})," Basic command (or use the Tape Loader from the startup menu of ZX Spectrum 128/+2E/+3E). The running ",(0,a.jsx)(t.code,{children:"LOAD"})," command will playback the selected file."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Note"}),": You can change the tape file any time, even when the machine is stopped, paused, or running. The effect of such a change is similar to ejecting a tape from a physical tape player and inserting a new one."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"normal-and-fast-load",children:"Normal and Fast Load"}),"\n",(0,a.jsxs)(t.p,{children:["Loading ZX Spectrum programs and tapes may take a long time, especially for large files. Besides the ",(0,a.jsx)(t.em,{children:"normal loading"})," mode, Klive supports ",(0,a.jsx)(t.em,{children:"fast load"}),", which reads the program instantly, in a fraction of a second."]}),"\n",(0,a.jsxs)(t.p,{children:["You can turn on or off fast load with the ",(0,a.jsx)(t.strong,{children:"Machine | Fast Load"})," command or by clicking the ",(0,a.jsx)(t.strong,{children:"Fast Load"})," icon (rocket) in the toolbar."]}),"\n",(0,a.jsx)(t.p,{children:"You can change the Fast Load mode even while loading a game. However, the change will take effect only when you start loading a program next time."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Note"}),": By default, fast load is turned on."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"revinding-the-tape",children:"Revinding the Tape"}),"\n",(0,a.jsxs)(t.p,{children:["When the loading completes or gets interrupted, the tape position stays as if you stopped the physical tape player. When you issue the ",(0,a.jsx)(t.code,{children:"LOAD"})," command again, the load operation starts searching the following file header from the position where it has been stopped."]}),"\n",(0,a.jsxs)(t.p,{children:["You can rewind the tape to its beginning just as you can do it with a physical tape cassette. Click the ",(0,a.jsx)(t.strong,{children:"Rewind"})," icon in the toolbar (the one to the right of the rocket icon) or execute the ",(0,a.jsx)(t.strong,{children:"Machine | Rewind Tape"})," command."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Note"}),": Klive allows you to examine the contents of a particular tape file. You can learn about it in the IDE documentation."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"how-fast-load-works",children:"How Fast Load Works"}),"\n",(0,a.jsxs)(t.p,{children:["The Fast Load mode applies a powerful technique: ROM hooking. While the emulator runs, it observes when the OS reaches a particular entry point of the load subroutine (by examining the value of the ",(0,a.jsx)(t.code,{children:"PC"})," register) in the ZX Spectrum ROM, including all ZX Spectrum models."]}),"\n",(0,a.jsx)(t.p,{children:"When the execution reaches the load routine, the Fast Load mechanism suspends the machine and injects the data from the tape file directly into the memory. While doing this, the algorithm sets the Z80 registers (including the flags) in the same way as the algorithm in the ROM."}),"\n",(0,a.jsxs)(t.p,{children:["When the data is loaded, the mechanism sets the current value of the ",(0,a.jsx)(t.code,{children:"PC"})," register to the exit point of the load routine as if the CPU has executed that and exits the fast mode."]}),"\n",(0,a.jsxs)(t.p,{children:["If there is some error during the load, the fast load mechanism sets ",(0,a.jsx)(t.code,{children:"PC"})," to the beginning of the method that reports tape error."]})]})}function MDXContent(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,o.a)(),e.components);return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)}let d={MDXContent,pageOpts:{filePath:"pages/getting-started/tapes.mdx",route:"/getting-started/tapes",pageMap:[{kind:"Meta",data:{index:"Introduction","getting-started":"Getting Started","z80-assembly":"Klive Z80 Assembler"}},{kind:"Folder",name:"getting-started",route:"/getting-started",children:[{kind:"Meta",data:{installation:"Installing Klive","first-run":"Running Klive",keyboard:"Using the Keyboard",tapes:"Loading from Tape","save-programs":"Saving Files","creating-project":"Creating a Klive Project"}},{kind:"MdxPage",name:"creating-project",route:"/getting-started/creating-project"},{kind:"MdxPage",name:"first-run",route:"/getting-started/first-run"},{kind:"MdxPage",name:"installation",route:"/getting-started/installation"},{kind:"MdxPage",name:"keyboard",route:"/getting-started/keyboard"},{kind:"MdxPage",name:"save-programs",route:"/getting-started/save-programs"},{kind:"MdxPage",name:"tapes",route:"/getting-started/tapes"}]},{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"z80-assembly",route:"/z80-assembly",children:[{kind:"Meta",data:{"z80-assembler":"Assembler Overview","language-structure":"Language Structure",expressions:"Expressions","z80-instructions":"Z80 Instructions",pragmas:"Pragmas",statements:"Assembler Statements",macros:"Macros",structs:"Structs"}},{kind:"MdxPage",name:"expressions",route:"/z80-assembly/expressions"},{kind:"MdxPage",name:"language-structure",route:"/z80-assembly/language-structure"},{kind:"MdxPage",name:"macros",route:"/z80-assembly/macros"},{kind:"MdxPage",name:"pragmas",route:"/z80-assembly/pragmas"},{kind:"MdxPage",name:"statements",route:"/z80-assembly/statements"},{kind:"MdxPage",name:"structs",route:"/z80-assembly/structs"},{kind:"MdxPage",name:"z80-assembler",route:"/z80-assembly/z80-assembler"},{kind:"MdxPage",name:"z80-instructions",route:"/z80-assembly/z80-instructions"}]}],flexsearch:{codeblocks:!0},title:"Loading from Tape",headings:r},pageNextRoute:"/getting-started/tapes",nextraLayout:i.ZP,themeConfig:l.Z};t.default=(0,s.j)(d)},3662:function(e,t,n){"use strict";n.d(t,{Z:function(){return s}});var a=n(5893);n(7294);var s={logo:(0,a.jsxs)("div",{style:{display:"flex",alignItems:"center"},children:[(0,a.jsx)(e=>{let{width:t=50,height:n=50}=e;return(0,a.jsxs)("svg",{width:t,height:n,viewBox:"0 0 200 200",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("rect",{width:"100%",height:"100%",fill:"#000"}),(0,a.jsx)("path",{d:"M 200 149 l 0 -20 l -70 70 l 20 0",fill:"#0ff"}),(0,a.jsx)("path",{d:"M 200 129 l 0 -20 l -90 90 l 20 0",fill:"#0f0"}),(0,a.jsx)("path",{d:"M 200 109 l 0 -20 l -110 110 l 20 0",fill:"#ff0"}),(0,a.jsx)("path",{d:"M 200 89 l 0 -20 l -130 130 l 20 0",fill:"#f00"}),(0,a.jsx)("path",{d:"M 0 0 l 200 0 l 0 8 l -200 0",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 0 200 l 200 0 l 0 -8 l -200 0",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 0 0 l 0 200 l 8 0 l 0 -200",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 192 0 l 0 200 l 8 0 l 0 -200",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 40 40 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 40 60 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 40 80 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 40 100 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 40 120 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 40 140 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 60 80 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 80 80 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 100 100 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 120 120 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 140 140 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 100 60 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"}),(0,a.jsx)("path",{d:"M 120 40 l 20 0 l 0 20 l -20 0 l 0 -20",fill:"#00B4CC"})," "]})},{}),(0,a.jsx)("span",{style:{marginLeft:12,fontWeight:"bold",fontSize:"2em"},children:"Klive IDE"})]}),logoLink:"https://dotneteer.github.io/kliveide",editLink:{text:null},feedback:{content:null},project:{link:"https://github.com/dotneteer/kliveide"}}}},function(e){e.O(0,[774,546,888,179],function(){return e(e.s=5374)}),_N_E=e.O()}]);