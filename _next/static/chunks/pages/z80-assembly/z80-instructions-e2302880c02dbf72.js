(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6166],{2476:(e,s,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/z80-assembly/z80-instructions",function(){return n(4808)}])},4808:(e,s,n)=>{"use strict";n.r(s),n.d(s,{default:()=>l,useTOC:()=>c});var r=n(7876),t=n(1807),i=n(8964),o=n(9707);function c(e){return[{value:"Z80 Mnemonics",id:"z80-mnemonics",depth:2},{value:"Z80 Registers",id:"z80-registers",depth:2},{value:"JP Syntax",id:"jp-syntax",depth:2},{value:"ALU operations syntax",id:"alu-operations-syntax",depth:2}]}let l=(0,t.e)(function(e){let{toc:s=c(e)}=e,n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{children:"Accepted Z80 Instructions"}),"\n",(0,r.jsxs)(n.p,{children:["The Klive Assembler implements every officially documented Z80 instruction as well as the non-official ones. During the implementation, the ",(0,r.jsx)(n.a,{href:"http://clrhome.org/table/",children:"ClrHome.org"})," was used as a reference."]}),"\n",(0,r.jsxs)(n.p,{children:["Z80 instructions may start with a label. Labels are identifiers that can be terminated by an optional colon (",(0,r.jsx)(n.code,{children:":"}),"). The compiler accepts both labels in these samples:"]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"Start"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"b"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"#f0"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"Wait"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"   "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"djnz"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"Wait"})]})]})}),"\n",(0,r.jsx)(n.h2,{id:s[0].id,children:s[0].value}),"\n",(0,r.jsx)(n.p,{children:"The compiler accepts these mnemonics:"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ADC"}),", ",(0,r.jsx)(n.code,{children:"ADD"}),", ",(0,r.jsx)(n.code,{children:"AND"}),", ",(0,r.jsx)(n.code,{children:"BIT"}),", ",(0,r.jsx)(n.code,{children:"CALL"}),", ",(0,r.jsx)(n.code,{children:"CCF"}),", ",(0,r.jsx)(n.code,{children:"CP"}),", ",(0,r.jsx)(n.code,{children:"CPD"}),",\n",(0,r.jsx)(n.code,{children:"CPDR"}),", ",(0,r.jsx)(n.code,{children:"CPI"}),", ",(0,r.jsx)(n.code,{children:"CPIR"}),", ",(0,r.jsx)(n.code,{children:"CPL"}),", ",(0,r.jsx)(n.code,{children:"DAA"}),", ",(0,r.jsx)(n.code,{children:"DEC"}),", ",(0,r.jsx)(n.code,{children:"DI"}),", ",(0,r.jsx)(n.code,{children:"DJNZ"}),",\n",(0,r.jsx)(n.code,{children:"EI"}),", ",(0,r.jsx)(n.code,{children:"EX"}),", ",(0,r.jsx)(n.code,{children:"EXX"}),", ",(0,r.jsx)(n.code,{children:"HALT"}),", ",(0,r.jsx)(n.code,{children:"IM"}),", ",(0,r.jsx)(n.code,{children:"IN"}),", ",(0,r.jsx)(n.code,{children:"INC"}),", ",(0,r.jsx)(n.code,{children:"IND"}),",\n",(0,r.jsx)(n.code,{children:"INDR"}),", ",(0,r.jsx)(n.code,{children:"INI"}),", ",(0,r.jsx)(n.code,{children:"INIR"}),", ",(0,r.jsx)(n.code,{children:"JP"}),", ",(0,r.jsx)(n.code,{children:"JR"}),", ",(0,r.jsx)(n.code,{children:"LD"}),", ",(0,r.jsx)(n.code,{children:"LDD"}),", ",(0,r.jsx)(n.code,{children:"LDDR"}),", ",(0,r.jsx)(n.code,{children:"LDDRX"}),"*, ",(0,r.jsx)(n.code,{children:"LDRX"}),"*, ",(0,r.jsx)(n.code,{children:"LDDX"}),"*,\n",(0,r.jsx)(n.code,{children:"LDI"}),", ",(0,r.jsx)(n.code,{children:"LDIR"}),", ",(0,r.jsx)(n.code,{children:"LDIRX"}),"*, ",(0,r.jsx)(n.code,{children:"LIRX"}),"*, ",(0,r.jsx)(n.code,{children:"LDIX"}),"*, ",(0,r.jsx)(n.code,{children:"LDPIRX"}),"*, ",(0,r.jsx)(n.code,{children:"LPRX"}),"*, ",(0,r.jsx)(n.code,{children:"MIRROR"}),"*, ",(0,r.jsx)(n.code,{children:"MIRR"}),"*, ",(0,r.jsx)(n.code,{children:"MUL"}),"*, ",(0,r.jsx)(n.code,{children:"NEG"}),",\n",(0,r.jsx)(n.code,{children:"NEXTREG"}),"*, ",(0,r.jsx)(n.code,{children:"NREG"}),"*, ",(0,r.jsx)(n.code,{children:"NOP"}),", ",(0,r.jsx)(n.code,{children:"OR"}),", ",(0,r.jsx)(n.code,{children:"OTDR"}),", ",(0,r.jsx)(n.code,{children:"OTIR"}),", ",(0,r.jsx)(n.code,{children:"OUT"}),", ",(0,r.jsx)(n.code,{children:"OUTINB"}),"*, ",(0,r.jsx)(n.code,{children:"OTIB"}),"*,\n",(0,r.jsx)(n.code,{children:"OUTD"}),", ",(0,r.jsx)(n.code,{children:"OUTI"}),", ",(0,r.jsx)(n.code,{children:"PIXELAD"}),"*, ",(0,r.jsx)(n.code,{children:"PXAD"}),"*, ",(0,r.jsx)(n.code,{children:"PIXELDN"}),"*, ",(0,r.jsx)(n.code,{children:"PXDN"}),"*, ",(0,r.jsx)(n.code,{children:"POP"}),", ",(0,r.jsx)(n.code,{children:"PUSH"}),", ",(0,r.jsx)(n.code,{children:"RES"}),", ",(0,r.jsx)(n.code,{children:"RET"}),", ",(0,r.jsx)(n.code,{children:"RETI"}),", ",(0,r.jsx)(n.code,{children:"RETN"}),",\n",(0,r.jsx)(n.code,{children:"RL"}),", ",(0,r.jsx)(n.code,{children:"RLA"}),", ",(0,r.jsx)(n.code,{children:"RLC"}),", ",(0,r.jsx)(n.code,{children:"RLCA"}),", ",(0,r.jsx)(n.code,{children:"RLD"}),", ",(0,r.jsx)(n.code,{children:"RR"}),", ",(0,r.jsx)(n.code,{children:"RRA"}),", ",(0,r.jsx)(n.code,{children:"RRC"}),",\n",(0,r.jsx)(n.code,{children:"RRCA"}),", ",(0,r.jsx)(n.code,{children:"RRD"}),", ",(0,r.jsx)(n.code,{children:"RST"}),", ",(0,r.jsx)(n.code,{children:"SBC"}),", ",(0,r.jsx)(n.code,{children:"SCF"}),", ",(0,r.jsx)(n.code,{children:"SET"}),", ",(0,r.jsx)(n.code,{children:"SETAE"}),"*, ",(0,r.jsx)(n.code,{children:"STAE"}),"*, ",(0,r.jsx)(n.code,{children:"SLA"}),", ",(0,r.jsx)(n.code,{children:"SLL"}),"\n",(0,r.jsx)(n.code,{children:"SRA"}),", ",(0,r.jsx)(n.code,{children:"SRL"}),", ",(0,r.jsx)(n.code,{children:"SUB"}),", ",(0,r.jsx)(n.code,{children:"SWAPNIB"}),"*, ",(0,r.jsx)(n.code,{children:"SWAP"}),"*, ",(0,r.jsx)(n.code,{children:"TEST"}),"*, ",(0,r.jsx)(n.code,{children:"XOR"}),"."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": The instructions marked with * can be used only with the ZX Spectrum Next model."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:s[1].id,children:s[1].value}),"\n",(0,r.jsx)(n.p,{children:"The compiler uses the standard 8-bit and 16-bit register names, as specified in the official\nZilog Z80 documentation:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["8-bit registers: ",(0,r.jsx)(n.code,{children:"A"}),", ",(0,r.jsx)(n.code,{children:"B"}),", ",(0,r.jsx)(n.code,{children:"C"}),", ",(0,r.jsx)(n.code,{children:"D"}),", ",(0,r.jsx)(n.code,{children:"E"}),", ",(0,r.jsx)(n.code,{children:"H"}),", ",(0,r.jsx)(n.code,{children:"L"}),", ",(0,r.jsx)(n.code,{children:"I"}),", ",(0,r.jsx)(n.code,{children:"R"})]}),"\n",(0,r.jsxs)(n.li,{children:["16-bit registers: ",(0,r.jsx)(n.code,{children:"AF"}),", ",(0,r.jsx)(n.code,{children:"BC"}),", ",(0,r.jsx)(n.code,{children:"DE"}),", ",(0,r.jsx)(n.code,{children:"HL"}),", ",(0,r.jsx)(n.code,{children:"SP"}),", ",(0,r.jsx)(n.code,{children:"IX"}),", ",(0,r.jsx)(n.code,{children:"IY"})]}),"\n",(0,r.jsxs)(n.li,{children:["For the 8-bit halves of the ",(0,r.jsx)(n.code,{children:"IX"})," and ",(0,r.jsx)(n.code,{children:"IY"})," index registers, the compiler uses these names: ",(0,r.jsx)(n.code,{children:"XL"}),", ",(0,r.jsx)(n.code,{children:"XH"}),", ",(0,r.jsx)(n.code,{children:"YL"}),", ",(0,r.jsx)(n.code,{children:"YH"}),". Alternatively, the compiler accepts these names, too: ",(0,r.jsx)(n.code,{children:"IXL"}),", ",(0,r.jsx)(n.code,{children:"IXH"}),", ",(0,r.jsx)(n.code,{children:"IYL"}),", ",(0,r.jsx)(n.code,{children:"IYH"}),". As a kind of exception to general naming conventions, these mixed-case names are also accepted: ",(0,r.jsx)(n.code,{children:"IXl"}),", ",(0,r.jsx)(n.code,{children:"IXh"}),", ",(0,r.jsx)(n.code,{children:"IYl"}),", ",(0,r.jsx)(n.code,{children:"IYh"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:s[2].id,children:s[2].value}),"\n",(0,r.jsxs)(n.p,{children:["Z80 assemblers use two different syntax constructs for the indirect ",(0,r.jsx)(n.code,{children:"JP"})," statements:"]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#6A9955"},children:"; Notation #1"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"jp"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"hl"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"jp"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"ix"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"jp"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"iy"})]}),"\n",(0,r.jsx)(n.span,{children:" "}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#6A9955"},children:"; Notation #2"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"jp"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" ("}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"hl"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:")"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"jp"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" ("}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"ix"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:")"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"jp"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" ("}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"iy"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:")"})]})]})}),"\n",(0,r.jsx)(n.p,{children:"The Klive Assembler accepts both notations."}),"\n",(0,r.jsx)(n.h2,{id:s[3].id,children:s[3].value}),"\n",(0,r.jsxs)(n.p,{children:["Three standard ALU operations between ",(0,r.jsx)(n.code,{children:"A"})," and other operands (",(0,r.jsx)(n.code,{children:"ADD"}),", ",(0,r.jsx)(n.code,{children:"ADC"}),", and ",(0,r.jsx)(n.code,{children:"SBC"}),") sign ",(0,r.jsx)(n.code,{children:"A"}),"\nas their first operand:"]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"add"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"b"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"adc"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:",("}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"hl"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:")"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"sbc"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"e"})]})]})}),"\n",(0,r.jsxs)(n.p,{children:["However, the five other standard ALU operations between ",(0,r.jsx)(n.code,{children:"A"})," and other operands (",(0,r.jsx)(n.code,{children:"SUB"}),", ",(0,r.jsx)(n.code,{children:"AND"}),", ",(0,r.jsx)(n.code,{children:"XOR"}),",\n",(0,r.jsx)(n.code,{children:"OR"}),", and ",(0,r.jsx)(n.code,{children:"CP"}),") omit ",(0,r.jsx)(n.code,{children:"A"})," from their notation:"]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"sub"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"e"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"and"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" ("}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"hl"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:")"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"xor"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"e"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"or"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"c"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"cp"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"b"})]})]})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Klive"})," compiler accepts the second group of ALU operations using the explicit ",(0,r.jsx)(n.code,{children:"A"})," operand, too:"]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"sub"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"e"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"and"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:",("}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"hl"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:")"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"xor"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"e"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"or"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"c"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"cp"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"b"})]})]})})]})},"/z80-assembly/z80-instructions",{filePath:"pages/z80-assembly/z80-instructions.mdx",timestamp:1752582908e3,pageMap:i.O,frontMatter:{},title:"Accepted Z80 Instructions"},"undefined"==typeof RemoteContent?c:RemoteContent.useTOC)},8964:(e,s,n)=>{"use strict";n.d(s,{O:()=>r});let r=[{data:{index:"Introduction","getting-started":"Getting Started","working-with-ide":"Working with the IDE",howto:"How To","z80-assembly":"Klive Z80 Assembler",contribute:"Contribute",scripting:"Scripting","commands-reference":"Commands Reference","machine-types":"Machine Types"}},{name:"commands-reference",route:"/commands-reference",frontMatter:{sidebarTitle:"Commands Reference"}},{name:"contribute",route:"/contribute",children:[{data:{"get-source":"Get the source code","improve-docs":"Improve the documentation"}},{name:"get-source",route:"/contribute/get-source",frontMatter:{sidebarTitle:"Get Source"}},{name:"improve-docs",route:"/contribute/improve-docs",frontMatter:{sidebarTitle:"Improve Docs"}}]},{name:"getting-started",route:"/getting-started",children:[{data:{installation:"Installing Klive","first-run":"Running Klive",keyboard:"Using the Keyboard",tapes:"Loading from Tape","save-programs":"Saving Files","creating-project":"Creating a Klive Project"}},{name:"creating-project",route:"/getting-started/creating-project",frontMatter:{sidebarTitle:"Creating Project"}},{name:"first-run",route:"/getting-started/first-run",frontMatter:{sidebarTitle:"First Run"}},{name:"installation",route:"/getting-started/installation",frontMatter:{sidebarTitle:"Installation"}},{name:"keyboard",route:"/getting-started/keyboard",frontMatter:{sidebarTitle:"Keyboard"}},{name:"save-programs",route:"/getting-started/save-programs",frontMatter:{sidebarTitle:"Save Programs"}},{name:"tapes",route:"/getting-started/tapes",frontMatter:{sidebarTitle:"Tapes"}}]},{name:"howto",route:"/howto",children:[{data:{"ide-startup":"IDE startup options",diagnostics:"Diagnostics",shortcuts:"Changing keyboard shortcuts","file-extensions":"Changing default file extensions","instant-screen":"Using the Instant Screen","always-on-top":"Keeping the Emulator always on top","measure-t-states":"Measuring T-states"}},{name:"always-on-top",route:"/howto/always-on-top",frontMatter:{sidebarTitle:"Always on Top"}},{name:"diagnostics",route:"/howto/diagnostics",frontMatter:{sidebarTitle:"Diagnostics"}},{name:"file-extensions",route:"/howto/file-extensions",frontMatter:{sidebarTitle:"File Extensions"}},{name:"ide-startup",route:"/howto/ide-startup",frontMatter:{sidebarTitle:"Ide Startup"}},{name:"instant-screen",route:"/howto/instant-screen",frontMatter:{sidebarTitle:"Instant Screen"}},{name:"measure-t-states",route:"/howto/measure-t-states",frontMatter:{sidebarTitle:"Measure T States"}},{name:"shortcuts",route:"/howto/shortcuts",frontMatter:{sidebarTitle:"Shortcuts"}}]},{name:"index",route:"/",frontMatter:{sidebarTitle:"Index"}},{name:"machine-types",route:"/machine-types",frontMatter:{sidebarTitle:"Machine Types"}},{name:"project-templates",route:"/project-templates",frontMatter:{sidebarTitle:"Project Templates"}},{name:"scripting",route:"/scripting",children:[{data:{overview:"Overview",syntax:"Scripting Syntax"}},{name:"overview",route:"/scripting/overview",frontMatter:{sidebarTitle:"Overview"}},{name:"syntax",route:"/scripting/syntax",frontMatter:{sidebarTitle:"Syntax"}}]},{name:"working-with-ide",route:"/working-with-ide",children:[{data:{"project-explorer":"The Project Explorer","editing-code":"Editing Code","run-debug":"Running & Debugging Code","exporting-code":"Exporting Code",zxb:"ZXBASIC Integration",sjasmp:"SJASMPLUS Integration","ide-settings":"IDE Settings",cpu:"The CPU View",ula:"The ULA View",memory:"The Memory View",disassembly:"The Disassembly View",breakpoints:"The Breakpoints View","system-vars":"The System Variables View",basic:"The BASIC Listing",commands:"Interactive Commands","build-system":"The Build System"}},{name:"basic",route:"/working-with-ide/basic",frontMatter:{sidebarTitle:"Basic"}},{name:"breakpoints",route:"/working-with-ide/breakpoints",frontMatter:{sidebarTitle:"Breakpoints"}},{name:"build-system",route:"/working-with-ide/build-system",frontMatter:{sidebarTitle:"Build System"}},{name:"commands",route:"/working-with-ide/commands",frontMatter:{sidebarTitle:"Commands"}},{name:"cpu",route:"/working-with-ide/cpu",frontMatter:{sidebarTitle:"Cpu"}},{name:"disassembly",route:"/working-with-ide/disassembly",frontMatter:{sidebarTitle:"Disassembly"}},{name:"editing-code",route:"/working-with-ide/editing-code",frontMatter:{sidebarTitle:"Editing Code"}},{name:"exporting-code",route:"/working-with-ide/exporting-code",frontMatter:{sidebarTitle:"Exporting Code"}},{name:"ide-settings",route:"/working-with-ide/ide-settings",frontMatter:{sidebarTitle:"Ide Settings"}},{name:"memory",route:"/working-with-ide/memory",frontMatter:{sidebarTitle:"Memory"}},{name:"project-explorer",route:"/working-with-ide/project-explorer",frontMatter:{sidebarTitle:"Project Explorer"}},{name:"run-debug",route:"/working-with-ide/run-debug",frontMatter:{sidebarTitle:"Run Debug"}},{name:"sjasmp",route:"/working-with-ide/sjasmp",frontMatter:{sidebarTitle:"Sjasmp"}},{name:"system-vars",route:"/working-with-ide/system-vars",frontMatter:{sidebarTitle:"System Vars"}},{name:"ula",route:"/working-with-ide/ula",frontMatter:{sidebarTitle:"Ula"}},{name:"zxb",route:"/working-with-ide/zxb",frontMatter:{sidebarTitle:"Zxb"}}]},{name:"z80-assembly",route:"/z80-assembly",children:[{data:{"z80-assembler":"Assembler Overview","language-structure":"Language Structure",directives:"Directives",expressions:"Expressions","z80-instructions":"Z80 Instructions",pragmas:"Pragmas",statements:"Assembler Statements",macros:"Macros",structs:"Structs"}},{name:"directives",route:"/z80-assembly/directives",frontMatter:{sidebarTitle:"Directives"}},{name:"expressions",route:"/z80-assembly/expressions",frontMatter:{sidebarTitle:"Expressions"}},{name:"language-structure",route:"/z80-assembly/language-structure",frontMatter:{sidebarTitle:"Language Structure"}},{name:"macros",route:"/z80-assembly/macros",frontMatter:{sidebarTitle:"Macros"}},{name:"pragmas",route:"/z80-assembly/pragmas",frontMatter:{sidebarTitle:"Pragmas"}},{name:"statements",route:"/z80-assembly/statements",frontMatter:{sidebarTitle:"Statements"}},{name:"structs",route:"/z80-assembly/structs",frontMatter:{sidebarTitle:"Structs"}},{name:"z80-assembler",route:"/z80-assembly/z80-assembler",frontMatter:{sidebarTitle:"Z80 Assembler"}},{name:"z80-instructions",route:"/z80-assembly/z80-instructions",frontMatter:{sidebarTitle:"Z80 Instructions"}}]}]}},e=>{e.O(0,[1807,636,6593,8792],()=>e(e.s=2476)),_N_E=e.O()}]);