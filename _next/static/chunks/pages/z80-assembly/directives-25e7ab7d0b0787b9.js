(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3300],{1596:(e,s,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/z80-assembly/directives",function(){return n(4550)}])},4550:(e,s,n)=>{"use strict";n.r(s),n.d(s,{default:()=>a,useTOC:()=>o});var r=n(7876),t=n(1807),i=n(8964),l=n(9707);function o(e){return[{value:"The #IF Directive",id:"the-if-directive",depth:2},{value:"The #IFDEF and #IFNDEF Directives",id:"the-ifdef-and-ifndef-directives",depth:2},{value:"The #IFMOD and #IFNMOD Directives",id:"the-ifmod-and-ifnmod-directives",depth:2},{value:"The #DEFINE and #UNDEF Directives",id:"the-define-and-undef-directives",depth:2},{value:"The #INCLUDE Directive",id:"the-include-directive",depth:2}]}let a=(0,t.e)(function(e){let{toc:s=o(e)}=e,n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",span:"span",strong:"strong",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{children:"Directives"}),"\n",(0,r.jsxs)(n.p,{children:["The directives of the ",(0,r.jsx)(n.strong,{children:"Klive"})," Z80 Assembler representation are used for preprocessing, similarly to those in the C and C++ programming languages, though their semantics are different."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Although you can add comments to the end of directives, they may not have labels."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:s[0].id,children:s[0].value}),"\n",(0,r.jsxs)(n.p,{children:["You can use this directive for conditional compilation. The argument of the directive is a\nconditional expression, and it determines on which branch the compilation goes on. ",(0,r.jsx)(n.strong,{children:"#IF"}),"\nworks in concert with ",(0,r.jsx)(n.code,{children:"#ELSE"})," and ",(0,r.jsx)(n.code,{children:"#ENDIF"}),":"]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#6A9955"},children:"; Block #1"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#if"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"2"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:">"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"3"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"b"})]}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#endif"})}),"\n",(0,r.jsx)(n.span,{children:" "}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#6A9955"},children:"; Block #2;"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#if"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"2"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"<"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"3"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"nop"})]}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#else"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"b"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"c"})]}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#endif"})}),"\n",(0,r.jsx)(n.span,{children:" "}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#6A9955"},children:"; Block #3"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#if"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" $ "}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:">"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" $"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"+"}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"2"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"nop"})]}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#else"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"b"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"c"})]}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#endif"})})]})}),"\n",(0,r.jsxs)(n.p,{children:["Here, since the condition is false, ",(0,r.jsx)(n.strong,{children:"Block #1"})," does not generate output. ",(0,r.jsx)(n.strong,{children:"Block #2"})," emits a ",(0,r.jsx)(n.code,{children:"nop"}),", as the condition is true. The false condition value in ",(0,r.jsx)(n.strong,{children:"Block #3"})," moves code parsing to the ",(0,r.jsx)(n.code,{children:"#else"})," branch, emitting a ",(0,r.jsx)(n.code,{children:"ld b,c"})," instruction."]}),"\n",(0,r.jsx)(n.h2,{id:s[1].id,children:s[1].value}),"\n",(0,r.jsxs)(n.p,{children:["These directives work similarly to #IF. However, they check if a particular symbol has (",(0,r.jsx)(n.code,{children:"#IFDEF"}),") or has not (",(0,r.jsx)(n.code,{children:"#IFNDEF"}),") been defined. So, their single argument is an identifier name."]}),"\n",(0,r.jsx)(n.h2,{id:s[2].id,children:s[2].value}),"\n",(0,r.jsxs)(n.p,{children:["These directives work similarly to ",(0,r.jsx)(n.code,{children:"#IF"}),". However, these check if the codeâ€™s current model is specified with the identifier following the ",(0,r.jsx)(n.code,{children:"IFMOD"})," or ",(0,r.jsx)(n.code,{children:"IFNMOD"})," pragma. Here is a short sample of using this directive:"]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#C586C0"},children:".model"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"Spectrum48"})]}),"\n",(0,r.jsx)(n.span,{children:" "}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#ifmod"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"Spectrum128"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"BorderColor"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#C586C0"},children:".equ"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"5"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"RetAddr"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#C586C0"},children:".equ"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"#2604"})]}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#else"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"BorderColor"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#C586C0"},children:".equ"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"4"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"RetAddr"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#C586C0"},children:".equ"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"#12a2"})]}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#endif"})}),"\n",(0,r.jsx)(n.span,{children:" "}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"Start"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"	"}),(0,r.jsx)(n.span,{style:{color:"#C586C0"},children:".org"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#4D8061"},children:"#8000"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"BorderColor"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"out"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" (#"}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"fe"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"),"}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"jp"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"RetAddr"})]})]})}),"\n",(0,r.jsxs)(n.p,{children:["You can use only these identifiers with this pragma (case-insensitively): ",(0,r.jsx)(n.code,{children:"SPECTRUM48"}),",\n",(0,r.jsx)(n.code,{children:"SPECTRUM128"}),", ",(0,r.jsx)(n.code,{children:"SPECTRUMP3"}),", ",(0,r.jsx)(n.code,{children:"NEXT"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:s[3].id,children:s[3].value}),"\n",(0,r.jsxs)(n.p,{children:["You can explicitly define a symbol with the ",(0,r.jsx)(n.code,{children:"#DEFINE"})," directive. Such a symbol has no concrete value, just its existence. With ",(0,r.jsx)(n.code,{children:"#UNDEF"}),", you may declare a symbol undefined."]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#define"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"SYMB"})]}),"\n",(0,r.jsx)(n.span,{children:" "}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#6A9955"},children:"; Block #1"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#ifdef"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"SYMB"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"a"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"b"})]}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#endif"})}),"\n",(0,r.jsx)(n.span,{children:" "}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#undef"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"SYMB"})]}),"\n",(0,r.jsx)(n.span,{children:" "}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#6A9955"},children:"; Block #2;"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#ifdef"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#B5890F"},children:"SYMB"})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"nop"})]}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#else"})}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:"    "}),(0,r.jsx)(n.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"b"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:","}),(0,r.jsx)(n.span,{style:{color:"#2B7CB3"},children:"c"})]}),"\n",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#endif"})})]})}),"\n",(0,r.jsxs)(n.p,{children:["According to this definition, the first block emits a ",(0,r.jsx)(n.code,{children:"ld, a,b"})," instruction, and the second one emits a ",(0,r.jsx)(n.code,{children:"ld b,c"})," instruction."]}),"\n",(0,r.jsx)(n.h2,{id:s[4].id,children:s[4].value}),"\n",(0,r.jsx)(n.p,{children:"You can use this directive to load and process a source file from within another source file."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"#INCLUDE"})," accepts a string that names a file with its extension. The file name may contain either an absolute or a relative path. When a relative path is provided, its starting point is always the source file with the ",(0,r.jsx)(n.code,{children:"#INCLUDE"})," directive."]}),"\n",(0,r.jsxs)(n.p,{children:["Assume that this code is in the ",(0,r.jsx)(n.code,{children:"C:\\Work"})," folder:"]}),"\n",(0,r.jsx)(n.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,r.jsxs)(n.code,{children:[(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#include"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#CD3131"},children:'"Symbol.z80asm"'})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#include"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#CD3131"},children:'"./MyRules.z80asm"'})]}),"\n",(0,r.jsxs)(n.span,{children:[(0,r.jsx)(n.span,{style:{color:"#569CD6"},children:"#include"}),(0,r.jsx)(n.span,{style:{color:"#A4A4A4"},children:" "}),(0,r.jsx)(n.span,{style:{color:"#CD3131"},children:'"/Common/scroll.z80asm"'})]})]})}),"\n",(0,r.jsxs)(n.p,{children:["The compiler will check the ",(0,r.jsx)(n.code,{children:"C:\\Work"})," folder for the first two include files and ",(0,r.jsx)(n.code,{children:"C:\\Work\\Commmon"})," for the third one."]})]})},"/z80-assembly/directives",{filePath:"pages/z80-assembly/directives.mdx",timestamp:1752582908e3,pageMap:i.O,frontMatter:{},title:"Directives"},"undefined"==typeof RemoteContent?o:RemoteContent.useTOC)},8964:(e,s,n)=>{"use strict";n.d(s,{O:()=>r});let r=[{data:{index:"Introduction","getting-started":"Getting Started","working-with-ide":"Working with the IDE",howto:"How To","z80-assembly":"Klive Z80 Assembler",contribute:"Contribute",scripting:"Scripting","commands-reference":"Commands Reference","machine-types":"Machine Types"}},{name:"commands-reference",route:"/commands-reference",frontMatter:{sidebarTitle:"Commands Reference"}},{name:"contribute",route:"/contribute",children:[{data:{"get-source":"Get the source code","improve-docs":"Improve the documentation"}},{name:"get-source",route:"/contribute/get-source",frontMatter:{sidebarTitle:"Get Source"}},{name:"improve-docs",route:"/contribute/improve-docs",frontMatter:{sidebarTitle:"Improve Docs"}}]},{name:"getting-started",route:"/getting-started",children:[{data:{installation:"Installing Klive","first-run":"Running Klive",keyboard:"Using the Keyboard",tapes:"Loading from Tape","save-programs":"Saving Files","creating-project":"Creating a Klive Project"}},{name:"creating-project",route:"/getting-started/creating-project",frontMatter:{sidebarTitle:"Creating Project"}},{name:"first-run",route:"/getting-started/first-run",frontMatter:{sidebarTitle:"First Run"}},{name:"installation",route:"/getting-started/installation",frontMatter:{sidebarTitle:"Installation"}},{name:"keyboard",route:"/getting-started/keyboard",frontMatter:{sidebarTitle:"Keyboard"}},{name:"save-programs",route:"/getting-started/save-programs",frontMatter:{sidebarTitle:"Save Programs"}},{name:"tapes",route:"/getting-started/tapes",frontMatter:{sidebarTitle:"Tapes"}}]},{name:"howto",route:"/howto",children:[{data:{"ide-startup":"IDE startup options",diagnostics:"Diagnostics",shortcuts:"Changing keyboard shortcuts","file-extensions":"Changing default file extensions","instant-screen":"Using the Instant Screen","always-on-top":"Keeping the Emulator always on top","measure-t-states":"Measuring T-states"}},{name:"always-on-top",route:"/howto/always-on-top",frontMatter:{sidebarTitle:"Always on Top"}},{name:"diagnostics",route:"/howto/diagnostics",frontMatter:{sidebarTitle:"Diagnostics"}},{name:"file-extensions",route:"/howto/file-extensions",frontMatter:{sidebarTitle:"File Extensions"}},{name:"ide-startup",route:"/howto/ide-startup",frontMatter:{sidebarTitle:"Ide Startup"}},{name:"instant-screen",route:"/howto/instant-screen",frontMatter:{sidebarTitle:"Instant Screen"}},{name:"measure-t-states",route:"/howto/measure-t-states",frontMatter:{sidebarTitle:"Measure T States"}},{name:"shortcuts",route:"/howto/shortcuts",frontMatter:{sidebarTitle:"Shortcuts"}}]},{name:"index",route:"/",frontMatter:{sidebarTitle:"Index"}},{name:"machine-types",route:"/machine-types",frontMatter:{sidebarTitle:"Machine Types"}},{name:"project-templates",route:"/project-templates",frontMatter:{sidebarTitle:"Project Templates"}},{name:"scripting",route:"/scripting",children:[{data:{overview:"Overview",syntax:"Scripting Syntax"}},{name:"overview",route:"/scripting/overview",frontMatter:{sidebarTitle:"Overview"}},{name:"syntax",route:"/scripting/syntax",frontMatter:{sidebarTitle:"Syntax"}}]},{name:"working-with-ide",route:"/working-with-ide",children:[{data:{"project-explorer":"The Project Explorer","editing-code":"Editing Code","run-debug":"Running & Debugging Code","exporting-code":"Exporting Code",zxb:"ZXBASIC Integration",sjasmp:"SJASMPLUS Integration","ide-settings":"IDE Settings",cpu:"The CPU View",ula:"The ULA View",memory:"The Memory View",disassembly:"The Disassembly View",breakpoints:"The Breakpoints View","system-vars":"The System Variables View",basic:"The BASIC Listing",commands:"Interactive Commands","build-system":"The Build System"}},{name:"basic",route:"/working-with-ide/basic",frontMatter:{sidebarTitle:"Basic"}},{name:"breakpoints",route:"/working-with-ide/breakpoints",frontMatter:{sidebarTitle:"Breakpoints"}},{name:"build-system",route:"/working-with-ide/build-system",frontMatter:{sidebarTitle:"Build System"}},{name:"commands",route:"/working-with-ide/commands",frontMatter:{sidebarTitle:"Commands"}},{name:"cpu",route:"/working-with-ide/cpu",frontMatter:{sidebarTitle:"Cpu"}},{name:"disassembly",route:"/working-with-ide/disassembly",frontMatter:{sidebarTitle:"Disassembly"}},{name:"editing-code",route:"/working-with-ide/editing-code",frontMatter:{sidebarTitle:"Editing Code"}},{name:"exporting-code",route:"/working-with-ide/exporting-code",frontMatter:{sidebarTitle:"Exporting Code"}},{name:"ide-settings",route:"/working-with-ide/ide-settings",frontMatter:{sidebarTitle:"Ide Settings"}},{name:"memory",route:"/working-with-ide/memory",frontMatter:{sidebarTitle:"Memory"}},{name:"project-explorer",route:"/working-with-ide/project-explorer",frontMatter:{sidebarTitle:"Project Explorer"}},{name:"run-debug",route:"/working-with-ide/run-debug",frontMatter:{sidebarTitle:"Run Debug"}},{name:"sjasmp",route:"/working-with-ide/sjasmp",frontMatter:{sidebarTitle:"Sjasmp"}},{name:"system-vars",route:"/working-with-ide/system-vars",frontMatter:{sidebarTitle:"System Vars"}},{name:"ula",route:"/working-with-ide/ula",frontMatter:{sidebarTitle:"Ula"}},{name:"zxb",route:"/working-with-ide/zxb",frontMatter:{sidebarTitle:"Zxb"}}]},{name:"z80-assembly",route:"/z80-assembly",children:[{data:{"z80-assembler":"Assembler Overview","language-structure":"Language Structure",directives:"Directives",expressions:"Expressions","z80-instructions":"Z80 Instructions",pragmas:"Pragmas",statements:"Assembler Statements",macros:"Macros",structs:"Structs"}},{name:"directives",route:"/z80-assembly/directives",frontMatter:{sidebarTitle:"Directives"}},{name:"expressions",route:"/z80-assembly/expressions",frontMatter:{sidebarTitle:"Expressions"}},{name:"language-structure",route:"/z80-assembly/language-structure",frontMatter:{sidebarTitle:"Language Structure"}},{name:"macros",route:"/z80-assembly/macros",frontMatter:{sidebarTitle:"Macros"}},{name:"pragmas",route:"/z80-assembly/pragmas",frontMatter:{sidebarTitle:"Pragmas"}},{name:"statements",route:"/z80-assembly/statements",frontMatter:{sidebarTitle:"Statements"}},{name:"structs",route:"/z80-assembly/structs",frontMatter:{sidebarTitle:"Structs"}},{name:"z80-assembler",route:"/z80-assembly/z80-assembler",frontMatter:{sidebarTitle:"Z80 Assembler"}},{name:"z80-instructions",route:"/z80-assembly/z80-instructions",frontMatter:{sidebarTitle:"Z80 Instructions"}}]}]}},e=>{e.O(0,[1807,636,6593,8792],()=>e(e.s=1596)),_N_E=e.O()}]);