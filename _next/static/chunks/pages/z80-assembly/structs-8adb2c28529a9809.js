(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8628],{4715:(e,s,l)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/z80-assembly/structs",function(){return l(7580)}])},5736:(e,s,l)=>{"use strict";l.d(s,{O:()=>n});let n=[{data:{index:"Introduction","getting-started":"Getting Started","working-with-ide":"Working with the IDE",howto:"How To","z80-assembly":"Klive Z80 Assembler",contribute:"Contribute",scripting:"Scripting","commands-reference":"Commands Reference","machine-types":"Machine Types"}},{name:"commands-reference",route:"/commands-reference",frontMatter:{sidebarTitle:"Commands Reference"}},{name:"contribute",route:"/contribute",children:[{data:{"get-source":"Get the source code","improve-docs":"Improve the documentation"}},{name:"get-source",route:"/contribute/get-source",frontMatter:{sidebarTitle:"Get Source"}},{name:"improve-docs",route:"/contribute/improve-docs",frontMatter:{sidebarTitle:"Improve Docs"}}]},{name:"getting-started",route:"/getting-started",children:[{data:{installation:"Installing Klive","first-run":"Running Klive",keyboard:"Using the Keyboard",tapes:"Loading from Tape","save-programs":"Saving Files","creating-project":"Creating a Klive Project"}},{name:"creating-project",route:"/getting-started/creating-project",frontMatter:{sidebarTitle:"Creating Project"}},{name:"first-run",route:"/getting-started/first-run",frontMatter:{sidebarTitle:"First Run"}},{name:"installation",route:"/getting-started/installation",frontMatter:{sidebarTitle:"Installation"}},{name:"keyboard",route:"/getting-started/keyboard",frontMatter:{sidebarTitle:"Keyboard"}},{name:"save-programs",route:"/getting-started/save-programs",frontMatter:{sidebarTitle:"Save Programs"}},{name:"tapes",route:"/getting-started/tapes",frontMatter:{sidebarTitle:"Tapes"}}]},{name:"howto",route:"/howto",children:[{data:{"ide-startup":"IDE startup options",diagnostics:"Diagnostics",shortcuts:"Changing keyboard shortcuts","file-extensions":"Changing default file extensions","instant-screen":"Using the Instant Screen","always-on-top":"Keeping the Emulator always on top","measure-t-states":"Measuring T-states"}},{name:"always-on-top",route:"/howto/always-on-top",frontMatter:{sidebarTitle:"Always on Top"}},{name:"diagnostics",route:"/howto/diagnostics",frontMatter:{sidebarTitle:"Diagnostics"}},{name:"file-extensions",route:"/howto/file-extensions",frontMatter:{sidebarTitle:"File Extensions"}},{name:"ide-startup",route:"/howto/ide-startup",frontMatter:{sidebarTitle:"Ide Startup"}},{name:"instant-screen",route:"/howto/instant-screen",frontMatter:{sidebarTitle:"Instant Screen"}},{name:"measure-t-states",route:"/howto/measure-t-states",frontMatter:{sidebarTitle:"Measure T States"}},{name:"shortcuts",route:"/howto/shortcuts",frontMatter:{sidebarTitle:"Shortcuts"}}]},{name:"index",route:"/",frontMatter:{sidebarTitle:"Index"}},{name:"machine-types",route:"/machine-types",frontMatter:{sidebarTitle:"Machine Types"}},{name:"project-templates",route:"/project-templates",frontMatter:{sidebarTitle:"Project Templates"}},{name:"scripting",route:"/scripting",children:[{data:{overview:"Overview",syntax:"Scripting Syntax"}},{name:"overview",route:"/scripting/overview",frontMatter:{sidebarTitle:"Overview"}},{name:"syntax",route:"/scripting/syntax",frontMatter:{sidebarTitle:"Syntax"}}]},{name:"working-with-ide",route:"/working-with-ide",children:[{data:{"project-explorer":"The Project Explorer","editing-code":"Editing Code","run-debug":"Running & Debugging Code","exporting-code":"Exporting Code",zxb:"ZXBASIC Integration",sjasmp:"SJASMPLUS Integration","ide-settings":"IDE Settings",cpu:"The CPU View",ula:"The ULA View",memory:"The Memory View",disassembly:"The Disassembly View",breakpoints:"The Breakpoints View","system-vars":"The System Variables View",basic:"The BASIC Listing",commands:"Interactive Commands","build-system":"The Build System"}},{name:"basic",route:"/working-with-ide/basic",frontMatter:{sidebarTitle:"Basic"}},{name:"breakpoints",route:"/working-with-ide/breakpoints",frontMatter:{sidebarTitle:"Breakpoints"}},{name:"build-system",route:"/working-with-ide/build-system",frontMatter:{sidebarTitle:"Build System"}},{name:"commands",route:"/working-with-ide/commands",frontMatter:{sidebarTitle:"Commands"}},{name:"cpu",route:"/working-with-ide/cpu",frontMatter:{sidebarTitle:"Cpu"}},{name:"disassembly",route:"/working-with-ide/disassembly",frontMatter:{sidebarTitle:"Disassembly"}},{name:"editing-code",route:"/working-with-ide/editing-code",frontMatter:{sidebarTitle:"Editing Code"}},{name:"exporting-code",route:"/working-with-ide/exporting-code",frontMatter:{sidebarTitle:"Exporting Code"}},{name:"ide-settings",route:"/working-with-ide/ide-settings",frontMatter:{sidebarTitle:"Ide Settings"}},{name:"memory",route:"/working-with-ide/memory",frontMatter:{sidebarTitle:"Memory"}},{name:"project-explorer",route:"/working-with-ide/project-explorer",frontMatter:{sidebarTitle:"Project Explorer"}},{name:"run-debug",route:"/working-with-ide/run-debug",frontMatter:{sidebarTitle:"Run Debug"}},{name:"sjasmp",route:"/working-with-ide/sjasmp",frontMatter:{sidebarTitle:"Sjasmp"}},{name:"system-vars",route:"/working-with-ide/system-vars",frontMatter:{sidebarTitle:"System Vars"}},{name:"ula",route:"/working-with-ide/ula",frontMatter:{sidebarTitle:"Ula"}},{name:"zxb",route:"/working-with-ide/zxb",frontMatter:{sidebarTitle:"Zxb"}}]},{name:"z80-assembly",route:"/z80-assembly",children:[{data:{"z80-assembler":"Assembler Overview","language-structure":"Language Structure",directives:"Directives",expressions:"Expressions","z80-instructions":"Z80 Instructions",pragmas:"Pragmas",statements:"Assembler Statements",macros:"Macros",structs:"Structs"}},{name:"directives",route:"/z80-assembly/directives",frontMatter:{sidebarTitle:"Directives"}},{name:"expressions",route:"/z80-assembly/expressions",frontMatter:{sidebarTitle:"Expressions"}},{name:"language-structure",route:"/z80-assembly/language-structure",frontMatter:{sidebarTitle:"Language Structure"}},{name:"macros",route:"/z80-assembly/macros",frontMatter:{sidebarTitle:"Macros"}},{name:"pragmas",route:"/z80-assembly/pragmas",frontMatter:{sidebarTitle:"Pragmas"}},{name:"statements",route:"/z80-assembly/statements",frontMatter:{sidebarTitle:"Statements"}},{name:"structs",route:"/z80-assembly/structs",frontMatter:{sidebarTitle:"Structs"}},{name:"z80-assembler",route:"/z80-assembly/z80-assembler",frontMatter:{sidebarTitle:"Z80 Assembler"}},{name:"z80-instructions",route:"/z80-assembly/z80-instructions",frontMatter:{sidebarTitle:"Z80 Instructions"}}]}]},7580:(e,s,l)=>{"use strict";l.r(s),l.d(s,{default:()=>i,useTOC:()=>c});var n=l(7876),r=l(1807),o=l(5736),t=l(9707);function c(e){return[{value:"Understanding Structures",id:"understanding-structures",depth:2},{value:"Structure Definition",id:"structure-definition",depth:2},{value:"Labels and Field Names",id:"labels-and-field-names",depth:2},{value:"Structure initialization",id:"structure-initialization",depth:2},{value:"Field Initializers",id:"field-initializers",depth:2},{value:"Fluent Structure Initialization",id:"fluent-structure-initialization",depth:2}]}let i=(0,r.e)(function(e){let{toc:s=c(e)}=e,l={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",span:"span",strong:"strong",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(l.h1,{children:"Structures"}),"\n",(0,n.jsxs)(l.p,{children:["Klive allows you to use structure definitions and placements in your Z80 programs. If you know the ",(0,n.jsx)(l.code,{children:"struct"})," construct from C, C++, or C#, the concept in Z80 is only partly similar."]}),"\n",(0,n.jsx)(l.h2,{id:s[0].id,children:s[0].value}),"\n",(0,n.jsx)(l.p,{children:"In Klive Assembler, a structure definition is a placeholder that defines a byte pattern like this:"}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})]})]})}),"\n",(0,n.jsxs)(l.p,{children:["This definition says that ",(0,n.jsx)(l.code,{children:"Object2D"})," is a structure of six bytes (two 16-bit words and two 8-bit bytes) with the following bytes emitted: #00, #00, #00, #00, #01, #01. Whenever you place a structure declaration in a program, just like in this sample, the assembler will emit the bytes you specified in the ",(0,n.jsx)(l.code,{children:".struct"})," definition:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsx)(l.code,{children:(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"() "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; emits #00, #00, #00, #00, #01, #01"})]})})}),"\n",(0,n.jsxs)(l.p,{children:["As you can see, six subsequent bytes do not tell enough about the semantics of ",(0,n.jsx)(l.code,{children:"Object2D"}),". When we created this structure, the original concept was to use two 16-bit numbers to specify the X and Y coordinates of the object, plus two 8-bit numbers to describe its horizontal and vertical velocity. With ",(0,n.jsx)(l.em,{children:"field definitions"})," (see ",(0,n.jsx)(l.code,{children:"X"}),", ",(0,n.jsx)(l.code,{children:"Y"}),", ",(0,n.jsx)(l.code,{children:"DX"}),", and ",(0,n.jsx)(l.code,{children:"DY"}),"), the meaning of ",(0,n.jsx)(l.code,{children:"Object2D"})," is more straightforward than it was before:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"X"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Y"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DY"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})]})]})}),"\n",(0,n.jsxs)(l.p,{children:["Of course, we would like to initialize objects with different states. With ",(0,n.jsx)(l.em,{children:"field initializers"}),", we can define structures with initial states that are different from the ",(0,n.jsx)(l.code,{children:".struct"})," definition:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Apple"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"X"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"100"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Y"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"100"})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Pear"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"-"}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DY"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"-"}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; Some other code"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ..."})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#2B7CB3"},children:"hl"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:","}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Apple"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#2B7CB3"},children:"de"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:","}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Pear"})]})]})}),"\n",(0,n.jsxs)(l.p,{children:["In this sample, the ",(0,n.jsx)(l.code,{children:"Apple"})," label (that the code later loads into ",(0,n.jsx)(l.strong,{children:"HL"}),") points to an ",(0,n.jsx)(l.code,{children:"Object2D"})," declaration that holds 100 in its X and Y values. Another label, ",(0,n.jsx)(l.code,{children:"Pear"}),", points to a different instance of ",(0,n.jsx)(l.code,{children:"Object2D"})," (later, the code loads that address into ",(0,n.jsx)(l.strong,{children:"DE"}),"). ",(0,n.jsx)(l.code,{children:"Pear"})," has a converse velocity compared to ",(0,n.jsx)(l.code,{children:"Apple"}),"."]}),"\n",(0,n.jsxs)(l.p,{children:["The Assembler allows you to initialize structures with any pragma that emits bytes to the assembly output. For example, the following code snippet sets a new ",(0,n.jsx)(l.code,{children:"Object2D"})," structure in a particular way:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Banana"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"10"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:", "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"12"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:", "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"2"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"2"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:", "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"2"})]})]})}),"\n",(0,n.jsxs)(l.p,{children:["The first ",(0,n.jsx)(l.code,{children:".defb"})," pragma (right after the first ",(0,n.jsx)(l.code,{children:"->"}),") emits two bytes, 10 and 1, respectively, and it sets the X field to 266 (10 + 1",(0,n.jsxs)(l.em,{children:["256). The second ",(0,n.jsx)(l.code,{children:".defb"})," sets Y to 524 (12 * 2"]}),"256). The initialization of DX (",(0,n.jsx)(l.code,{children:"DX -> .defb 2, 2"}),") emits two bytes and sets both ",(0,n.jsx)(l.code,{children:"DX"})," and ",(0,n.jsx)(l.code,{children:"DY"})," to 2."]}),"\n",(0,n.jsx)(l.h2,{id:s[1].id,children:s[1].value}),"\n",(0,n.jsxs)(l.p,{children:["You can define structure between the ",(0,n.jsx)(l.code,{children:".struct"})," and ",(0,n.jsx)(l.code,{children:".ends"}),"  statements. Each structure must have a unique name to declare with a label. The compiler accepts all of these definitions:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsx)(l.span,{children:(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; Version #1"})}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"MyStruct"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ..."})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsx)(l.span,{children:(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; Version #2"})}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"MyStruct"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ..."})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsx)(l.span,{children:(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; Version #3"})}),"\n",(0,n.jsx)(l.span,{children:(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"MyStruct"})}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ..."})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsx)(l.span,{children:(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; Version#4"})}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"MyStruct"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ..."})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})]})]})}),"\n",(0,n.jsx)(l.p,{children:"Nonetheless, it raises an error if you do not name the structure:"}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ERROR: .struct must have a name"})]}),"\n",(0,n.jsx)(l.span,{children:(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ..."})}),"\n",(0,n.jsx)(l.span,{children:(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})})]})}),"\n",(0,n.jsxs)(l.blockquote,{children:["\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.strong,{children:"Note"}),": The assembler accepts the following alternative keywords for ",(0,n.jsx)(l.code,{children:".struct"}),": ",(0,n.jsx)(l.code,{children:".STRUCT"}),", ",(0,n.jsx)(l.code,{children:"struct"}),", or ",(0,n.jsx)(l.code,{children:"STRUCT"}),". Similarly, ",(0,n.jsx)(l.code,{children:".ends"})," has these aliases, too: ",(0,n.jsx)(l.code,{children:".ENDS"}),", ",(0,n.jsx)(l.code,{children:"ends"}),", and ",(0,n.jsx)(l.code,{children:"ENDS"}),". Though you can define an empty structure, there is no practical reason to do so."]}),"\n"]}),"\n",(0,n.jsxs)(l.p,{children:["In the body of the structure, you can use only one of these byte-emitter pragmas: ",(0,n.jsx)(l.code,{children:".defb"}),", ",(0,n.jsx)(l.code,{children:".defw"}),", ",(0,n.jsx)(l.code,{children:".defm"}),", ",(0,n.jsx)(l.code,{children:".defn"}),", ",(0,n.jsx)(l.code,{children:".defc"}),", ",(0,n.jsx)(l.code,{children:".defs"}),", ",(0,n.jsx)(l.code,{children:".fillb"}),", ",(0,n.jsx)(l.code,{children:".fillw"}),", ",(0,n.jsx)(l.code,{children:".defg"}),",  or ",(0,n.jsx)(l.code,{children:".defgx"}),". If you try to use any other construct, the compiler raises an error message."]}),"\n",(0,n.jsx)(l.p,{children:"As you saw earlier, you can specify field labels within the structure body. The assembler is flexible: you can omit field labels or even use multiple labels for a single field:"}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D_A"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Coords"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"X"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Y"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Velocity"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})]})]})}),"\n",(0,n.jsxs)(l.p,{children:["Here, ",(0,n.jsx)(l.code,{children:"Object2D_A"})," has two field name for the first ",(0,n.jsx)(l.code,{children:".defw"})," field, ",(0,n.jsx)(l.code,{children:"Coords"}),", and ",(0,n.jsx)(l.code,{children:"X"}),", respectively. The last ",(0,n.jsx)(l.code,{children:".defb"})," does not have its field name, unlike the one before, ",(0,n.jsx)(l.code,{children:"Velocity"}),"."]}),"\n",(0,n.jsx)(l.h2,{id:s[2].id,children:s[2].value}),"\n",(0,n.jsxs)(l.p,{children:["The label assigned to the ",(0,n.jsx)(l.code,{children:".struct"})," definition has a dual role. When used in a structure initialization (for example, as ",(0,n.jsx)(l.code,{children:"Object2D"})," is utilized in the ",(0,n.jsx)(l.code,{children:"Object2D()"})," initializer), it identifies the structure. Nonetheless, you can use the label name in Z80 instructions, too. In this case, the label’s value is the size of the structure. For example, these instructions are equivalent, as the size of the ",(0,n.jsx)(l.code,{children:"Object2D"})," structure is six bytes:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#2B7CB3"},children:"a"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:","}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; Size of Object2D"})]}),"\n",(0,n.jsx)(l.span,{children:(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ..."})}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#2B7CB3"},children:"a"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:","}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"6"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; "})]})]})}),"\n",(0,n.jsxs)(l.p,{children:["You can allocate a memory block for 100 uninitialized instances of ",(0,n.jsx)(l.code,{children:"Object2D"})," with this pragma:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"My100Objects"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defs"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"100"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"*"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"})]})]})}),"\n",(0,n.jsxs)(l.blockquote,{children:["\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.strong,{children:"Note"}),": You cannot assign a label to the ",(0,n.jsx)(l.code,{children:".ends"})," statement. If you do, the compiler throws an error."]}),"\n"]}),"\n",(0,n.jsxs)(l.p,{children:["Labels assigned to the body of the ",(0,n.jsx)(l.code,{children:".struct"})," definition are used as field names. You can use them only with the structure name:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"X"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Y"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DY"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Apple"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ..."})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#2B7CB3"},children:"hl"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:","}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Apple"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"+"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D.DX"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#2B7CB3"},children:"a"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:",("}),(0,n.jsx)(l.span,{style:{color:"#2B7CB3"},children:"hl"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:")"})]})]})}),"\n",(0,n.jsxs)(l.p,{children:["Field label values contain the offset of the particular field from the beginning of the structure. Thus, the last two instructions in the code above load the content of the ",(0,n.jsx)(l.code,{children:"Apple"})," structure’s ",(0,n.jsx)(l.code,{children:"DX"})," field into ",(0,n.jsx)(l.strong,{children:"A"}),"."]}),"\n",(0,n.jsxs)(l.p,{children:["According to these definitions, here are the field label values of ",(0,n.jsx)(l.code,{children:"Object2D"}),":"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D.X"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D.Y"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"2"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D.DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"4"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D.DY"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"5"})]})]})}),"\n",(0,n.jsx)(l.h2,{id:s[3].id,children:s[3].value}),"\n",(0,n.jsxs)(l.p,{children:["The ",(0,n.jsx)(l.code,{children:".struct"})," definition does not emit any code; it just tells the compiler the layout and initial contents of a structure. To allocate space for a particular structure, you need to initialize it with the name of the structure plus a pair of opening and closing parentheses, just like these samples show:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsx)(l.span,{children:(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; Initalize an Object2D"})}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"MyObject"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsx)(l.span,{children:(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; Initialize another one"})}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"OtherObject"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]})]})}),"\n",(0,n.jsx)(l.p,{children:"When you add a label to the structure initialization, that label’s value points to the beginning of the structure in the memory."}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"start"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".org"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"#8000"})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DistanceEntry"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Address"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" $"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"SeqNo"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Index"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Data"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".org"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"#9000"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Index"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" = "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:";"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Entry1"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"	"}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DistanceEntry"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Index"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" = "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"2"}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:";"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Entry2"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"	"}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DistanceEntry"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Index"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" = "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"3"}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:";"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Entry3"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"	"}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DistanceEntry"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]})]})}),"\n",(0,n.jsxs)(l.p,{children:["The compiler emits the initialization code for ",(0,n.jsx)(l.code,{children:"Entry1"}),", ",(0,n.jsx)(l.code,{children:"Entry2"}),", and ",(0,n.jsx)(l.code,{children:"Entry3"})," as if you wrote this:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Data"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".org"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"#9000"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Entry1"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"#9000"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Entry2"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"#9003"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"2"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Entry3"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"#9006"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"03"})]})]})}),"\n",(0,n.jsx)(l.h2,{id:s[4].id,children:s[4].value}),"\n",(0,n.jsx)(l.p,{children:"Field initializers can be used to change the default structure initializer. A field initializer has this syntax:"}),"\n",(0,n.jsxs)(l.p,{children:["[",(0,n.jsx)(l.em,{children:"identifier"}),"] ",(0,n.jsx)(l.strong,{children:(0,n.jsx)(l.code,{children:"->"})})," ",(0,n.jsx)(l.em,{children:"byte-emitter-pragma"})]}),"\n",(0,n.jsxs)(l.p,{children:["For a moment, let’s forget that ",(0,n.jsx)(l.em,{children:"identifier"})," is optional. When you use it, it must be one of the structure’s field names. The ",(0,n.jsx)(l.em,{children:"byte-emitter-pragma"})," is one of the Klive pragmas you can use to define a structure body, namely these:  ",(0,n.jsx)(l.code,{children:".defb"}),", ",(0,n.jsx)(l.code,{children:".defw"}),", ",(0,n.jsx)(l.code,{children:".defm"}),", ",(0,n.jsx)(l.code,{children:".defn"}),", ",(0,n.jsx)(l.code,{children:".defc"}),", ",(0,n.jsx)(l.code,{children:".defs"}),", ",(0,n.jsx)(l.code,{children:".fillb"}),", ",(0,n.jsx)(l.code,{children:".fillw"}),", ",(0,n.jsx)(l.code,{children:".defg"}),",  or ",(0,n.jsx)(l.code,{children:".defgx"}),"."]}),"\n",(0,n.jsxs)(l.blockquote,{children:["\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.strong,{children:"Note"}),": You can use the label syntax for field names; thus, you can add an optional colon after the ",(0,n.jsx)(l.em,{children:"identifier"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(l.p,{children:["You can apply field initializer statements right after the structure initialization. Any other Z80 instruction, pragma, statement, or directive signs the end of the structure initialization. This code snippet shows two examples of setting up ",(0,n.jsx)(l.code,{children:"Object2D"})," structures. The first is correct; however, the second one raises an error:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".struct"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"X"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Y"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DY"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#C586C0",fontWeight:"bold"},children:".ends"})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Obj1"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"2"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DY"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"2"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#2B7CB3"},children:"a"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:","}),(0,n.jsx)(l.span,{style:{color:"#2B7CB3"},children:"b"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ... Some other code"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Obj2"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"X"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"100"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Y"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"100"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#569CD6",fontWeight:"bold"},children:"ld"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#2B7CB3"},children:"hl"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:","}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"#4000"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"    "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; Field initialization stops here"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"4"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ERROR"})]})]})}),"\n",(0,n.jsxs)(l.p,{children:["The compiler does not care how you initialize fields. For example, even if you have created the ",(0,n.jsx)(l.code,{children:"X"})," field of ",(0,n.jsx)(l.code,{children:"Object2D"})," with a ",(0,n.jsx)(l.code,{children:".defw"})," pragma, you can set its value with ",(0,n.jsx)(l.code,{children:".defb"}),", like in this example:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Obj3"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"X"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"100"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:", "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]})]})}),"\n",(0,n.jsxs)(l.p,{children:["You can even initialize two fields with a simple initializer statement. For example, ",(0,n.jsx)(l.code,{children:"DX"})," and ",(0,n.jsx)(l.code,{children:"DY"})," are one byte each. You can initialize both of these fields in a single step, as these code snippet shows:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Obj4"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"2"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:","}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"2"})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Obj5"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"#0202"})]})]})}),"\n",(0,n.jsx)(l.p,{children:"The order of fields is unimportant; you can initialize them in any order:"}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Obj6"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"X"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"100"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DY"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Y"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"200"})]})]})}),"\n",(0,n.jsx)(l.h2,{id:s[5].id,children:s[5].value}),"\n",(0,n.jsxs)(l.p,{children:["The assembler allows flexible initialization, where you do not use field names. The compiler emits bytes as the byte emitter pragmas would do if you were not within a structure initialization. Let’s assume you initialize an ",(0,n.jsx)(l.code,{children:"Object2D"})," this way:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Obj7"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defb"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"1"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:", "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"0"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"DX"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:"defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"#0303"})]})]})}),"\n",(0,n.jsx)(l.p,{children:"Without the field initializers, the structure would contain these six bytes:"}),"\n",(0,n.jsx)(l.p,{children:"#00, #00, #00, #00, #01, #01"}),"\n",(0,n.jsx)(l.p,{children:"However, the field initializers overwrote the default bytes with the ones displayed in boldface:"}),"\n",(0,n.jsxs)(l.p,{children:[(0,n.jsx)(l.strong,{children:"#01"}),", ",(0,n.jsx)(l.strong,{children:"#00"}),", #00, #00, ",(0,n.jsx)(l.strong,{children:"#03"}),", ",(0,n.jsx)(l.strong,{children:"#03"})]}),"\n",(0,n.jsxs)(l.p,{children:["You can choose your preferred way to initialize a structure using a field or unnamed initializers. The compiler does not care how you assemble the set of bytes within the structure. However, it does not allow you to overflow the structure boundaries. This sample shows you two initializations of ",(0,n.jsx)(l.code,{children:"Object2D"}),". The first is correct, as it emits exactly six bytes. However, the second raises an error since the initialization tries to put eight bytes into the structure:"]}),"\n",(0,n.jsx)(l.pre,{tabIndex:"0","data-language":"z80klive","data-word-wrap":"",children:(0,n.jsxs)(l.code,{children:[(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Obj8"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defm"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#CD3131"},children:'"012345"'})]}),"\n",(0,n.jsx)(l.span,{children:" "}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Obj9"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:":"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"Object2D"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"()    "}),(0,n.jsx)(l.span,{style:{color:"#6A9955"},children:"; ERROR: The code tries to initialize the structure with 8 bytes"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#B5890F"},children:"X"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defw"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#4D8061"},children:"100"})]}),"\n",(0,n.jsxs)(l.span,{children:[(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:"  "}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4",fontWeight:"bold"},children:"->"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#C586C0"},children:".defm"}),(0,n.jsx)(l.span,{style:{color:"#A4A4A4"},children:" "}),(0,n.jsx)(l.span,{style:{color:"#CD3131"},children:'"012345"'})]})]})})]})},"/z80-assembly/structs",{filePath:"pages/z80-assembly/structs.mdx",timestamp:1752582908e3,pageMap:o.O,frontMatter:{},title:"Structures"},"undefined"==typeof RemoteContent?c:RemoteContent.useTOC)}},e=>{var s=s=>e(e.s=s);e.O(0,[1807,636,6593,8792],()=>s(4715)),_N_E=e.O()}]);