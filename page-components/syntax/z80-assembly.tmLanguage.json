{
  "name": "Z80 Assembly",
  "scopeName": "source.z80-klive",
  "patterns": [
    { "include": "#comment" },
    { "include": "#string" },
    { "include": "#pragma" },
    { "include": "#directive" },
    { "include": "#number" },
    { "include": "#statement" },
    { "include": "#keyword" },
    { "include": "#function" },
    { "include": "#boolean" },
    { "include": "#register" },
    { "include": "#condition" },
    { "include": "#label" },
    { "include": "#macroparam" },
    { "include": "#identifier" },
    { "include": "#operator" }
  ],
  "repository": {
    "comment": {
      "patterns": [
        { "name": "comment.line.semicolon.z80-klive", "match": ";.*" },
        { "name": "comment.line.double-slash.z80-klive", "match": "//.*" },
        {
          "name": "comment.block.z80-klive",
          "begin": "/\\*\\*",
          "end": "\\*\\*/"
        }
      ]
    },
    "keyword": {
      "name": "keyword.control.z80-klive",
      "match": "(?i)\\b(nop|rlca|rrca|rla|rra|daa|cpl|scf|ccf|halt|exx|di|ei|neg|retn|reti|rld|rrd|ldi|cpi|ini|outi|ldd|cpd|ind|outd|ldir|cpir|inir|otir|lddr|cpdr|indr|otdr|ld|inc|dec|ex|add|adc|sub|sbc|and|xor|or|cp|djnz|jr|jp|call|ret|rst|push|pop|in|out|im|rlc|rrc|rl|rr|sla|sra|sll|srl|bit|res|set|ldix|ldws|ldirx|lirx|lddx|lddrx|ldrx|ldpirx|lprx|outinb|otib|mul|swapnib|swap|mirror|mirr|nextreg|nreg|pixeldn|pxdn|pixelad|pxad|setae|stae|test|bsla|bsra|bsrl|bsrf|brlc)\\b"
    },
    "pragma": {
      "name": "keyword.control.pragma.z80-klive",
      "match": "(?i)(\\.org|\\.bank|\\.xorg|\\.ent|\\.xent|\\.equ|\\.var|\\.disp|\\.defb|\\.db|\\.defw|\\.dw|\\.defm|\\.dm|\\.defn|\\.dn|\\.defh|\\.dh|\\.defs|\\.ds|\\.defc|\\.dc|\\.defg|\\.dg|\\.defgx|\\.dgx|\\.skip|\\.extern|\\.fillb|\\.fillw|\\.model|\\.injectopt|\\.align|\\.trace|\\.tracehex|\\.rndseed|\\.error|\\.includebin|\\.include_bin|\\.incbin|\\.comparebin|\\.zxbasic|\\.onsuccess)\\b|\\b(org|bank|xorg|ent|xent|equ|var|disp|defb|db|defw|dw|defm|dm|defn|dn|defh|dh|defs|ds|defc|dc|defg|dg|defgx|dgx|skip|extern|fillb|fillw|model|injectopt|align|trace|tracehex|rndseed|error|includebin|include_bin|incbin|comparebin|zxbasic|onsuccess)\\b"
    },
    "string": {
      "patterns": [
        { "name": "string.quoted.single.z80-klive", "match": "'.'"},
        {
          "name": "string.quoted.double.z80-klive",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "name": "constant.character.escape.z80-klive", "match": "\\\\([ipfbIoatPC\\\\'\"0]|x[0-9a-fA-F]{1,2})" }
          ]
        }
      ]
    },
    "number": {
      "patterns": [
        { "name": "constant.numeric.hexadecimal.z80-klive", "match": "(#[0-9a-fA-F]*[0-9][0-9a-fA-F]*)|(\\b0x[0-9a-fA-F]+\\b)|(\\$[0-9a-fA-F]+)|(\\b[0-9a-fA-F]+[hH]\\b)" },
        { "name": "constant.numeric.binary.z80-klive", "match": "(%[01_]+)|(\\b0b[01_]+\\b)|(\\b[01_]+[bB]\\b)" },
        { "name": "constant.numeric.octal.z80-klive", "match": "\\b([0-7]+[oOqQ])\\b" },
        { "name": "constant.numeric.real.z80-klive", "match": "\\b[0-9]+\\.[0-9]*([eE][+-]?[0-9]+)?\\b|\\.[0-9]+([eE][+-]?[0-9]+)?\\b|\\b[0-9]+[eE][+-]?[0-9]+\\b" },
        { "name": "constant.numeric.decimal.z80-klive", "match": "\\b[0-9]+\\b" }
      ]
    },
    "statement": {
      "name": "keyword.control.statement.z80-klive",
      "match": "(?i)(\\.macro|\\.mend|\\.proc|\\.endp|\\.pend|\\.loop|\\.endl|\\.lend|\\.repeat|\\.until|\\.while|\\.endw|\\.wend|\\.ifused|\\.ifnused|\\.if|\\.elif|\\.else|\\.endif|\\.for|\\.to|\\.step|\\.next|\\.break|\\.continue|\\.endmodule|\\.endscope|\\.moduleend|\\.scopeend|\\.struct|\\.ends|\\.local|\\.endm|\\.module|\\.scope)\\b|\\b(macro|mend|proc|endp|pend|loop|endl|lend|repeat|until|while|endw|wend|ifused|ifnused|if|elif|else|endif|for|to|step|next|break|continue|endmodule|endscope|moduleend|scopeend|struct|ends|local|endm|module|scope)\\b"
    },
    "directive": {
      "name": "keyword.control.directive.z80-klive",
      "match": "(?i)(#ifdef|#ifndef|#define|#undef|#ifmod|#ifnmod|#endif|#else|#if|#include|#line)\\b"
    },
    "register": {
      "name": "variable.language.register.z80-klive",
      "match": "(?i)\\b(af'|af|a|f|bc|b|c|de|d|e|hl|h|l|i|r|sp|ixh|ixl|ix|iyh|iyl|iy|xh|xl|yh|yl)\\b"
    },
    "condition": {
      "name": "variable.language.condition.z80-klive",
      "match": "(?i)\\b(z|nz|c|nc|po|pe|p|m)\\b"
    },
    "function": {
      "name": "support.function.z80-klive",
      "match": "(?i)\\b(textof|ltextof|hreg|lreg|def|isreg8|isreg8std|isreg8spec|isreg8idx|isreg16|isreg16std|isreg16idx|isregindirect|iscport|isindexedaddr|iscondition|isexpr|isregaf|isrega|isregbc|isregb|isregc|isregde|isregd|isrege|isreghl|isregh|isregl|isregi|isregr|isregsp|isregxh|isregxl|isregix|isregyh|isregyl|isregiy|\\.cnt|\\$cnt)\\b"
    },
    "boolean": {
      "name": "constant.language.boolean.z80-klive",
      "match": "(?i)\\b(true|false|\\.true|\\.false)\\b"
    },
    "operator": {
      "name": "keyword.operator.z80-klive",
      "match": "::|:=|==|===|!=|!==|<=|>=|<<|<\\?|>>|>\\?|:|\\?|\\+|-|\\*|/|\\||\\^|!|~|%|&|<|>"
    },
    "macroparam": {
      "name": "variable.parameter.macro.z80-klive",
      "begin": "{{",
      "end": "}}",
      "patterns": [
        { "match": "[\\._@`a-zA-Z][_@!?\\.0-9A-Za-z]*" }
      ]
    },
    "identifier": {
      "name": "variable.other.identifier.z80-klive",
      "match": "(\\.(?![0-9])[_@!?\\.0-9A-Za-z]*)|([_@`A-Za-z][_@!?\\.0-9A-Za-z]*)"
    }
  }
}
