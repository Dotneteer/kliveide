// ZX Spectrum allows clock changes when the tape is passive
bool allowCpuClockChange () {
  return !tapeMode;
}

// Event handler for a new frame initialization
// Here, ZX Spectrum initializes the rendering of the next screen
// frame and resets the audio samples buffer.
inline void onInitNewFrame(u32 oldClockMultiplier) {
  // --- Reset pointers used for screen rendering
  local u32 overflow = lastRenderedFrameTact;
  renderingTablePtr = &renderingTactTable;
  pixelBufferPtr = &pixelRenderingBuffer;
  frameCompleted = false;

  // --- Render the overflown part of the screen
  renderScreen(overflow);

  // --- Calculate flash phase
  if (!(frameCount % flashFrames)) {
    flashPhase ^= 0x01;
  }

  // --- Reset beeper frame state
  if (oldClockMultiplier != clockMultiplier) {
    setBeeperSampleRate(audioSampleRate);
  }
  audioSampleCount = 0;
}

// The execution engine is about to execute a CPU cycle
inline void beforeCpuCycle(u32 frameTact) {
  // --- Nothing to do
}

// The execution engine has just executed a CPU cycle
inline void afterCpuCycle(u32 frameTact) {
  // --- Nothing to do
}

// ZX Spectrum renders the next pixels of the screen 
inline void beforeTerminationCheck(u32 frameTact) {
  renderScreen(frameTact);
}

// Tests if the execution cycle reached the termination point
inline bool testTerminationPoint() {
  if (memorySelectedRom == terminationRom) {
    return pc == terminationPoint;
  }
  return false;
}

// The execution engine is after checking loop termination
inline void afterTerminationCheck() {
  // --- Notify the tape device to check tape hooks
  checkTapeHooks();

  // Is it time to render the next beeper/sound sample?
  if (tacts >= audioNextSampleTact) {
    renderBeeperSample();

    // get_global $psgSupportsSound
    // if
    //   ;; Render next PSG sample
    //   (i32.add 
    //     (get_global $PSG_SAMPLE_BUFFER) 
    //     (i32.mul (get_global $audioSampleCount) (i32.const 2))
    //   )
    //   (i32.eqz (get_global $psgOrphanSamples))
    //   if (result i32)
    //     i32.const 0
    //   else
    //     (i32.div_u 
    //       (i32.div_u (get_global $psgOrphanSum) (get_global $psgOrphanSamples))
    //       (i32.const 3)
    //     )
    //   end
    //   i32.store16
    //   i32.const 0 set_global $psgOrphanSum
    //   i32.const 0 set_global $psgOrphanSamples
    // end

    moveToNextAudioSample();
  }
}

// The execution engine has just completed a frame
inline void onFrameCompleted() {
  // --- The current screen rendering frame completed
  // --- Prepare for the next PSG tact that may overflow to the next frame
  // (i32.gt_u (get_global $psgNextClockTact) (get_global $tactsInFrame))
  // if
  //   (i32.sub 
  //     (get_global $psgNextClockTact)
  //     (get_global $tactsInFrame)
  //   )
  //   set_global $psgNextClockTact
  // end

  // --- Prepare for the next beeper sample rate that may overflow to the next frame
  if (audioNextSampleTact > tacts) {
    audioNextSampleTact -= tactsInFrame * clockMultiplier;
  }
}
