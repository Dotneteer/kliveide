// ============================================================================
// Core memory handling functions
// ============================================================================

// 16 MB memory reserved for virtual machines
u8[0x100_0000] vmMemory;

// Lookup structure for a 8K memory page
type blockLookup = struct {
  u32 readPtr,
  u32 writePtr,
  u8 flags,
  u8[7] reserved
};

// Memory page lookup table
blockLookup[8] blockLookupTable;

// Reads the contents of the memory
inline u8 readMemory(u16 addr) {
  local u32 page = addr >> 13;
  local u32 offset = addr & 0b0001_1111_1111_1111;
  return vmMemory[blockLookupTable[page].readPtr + offset];
}

// Reads the contents of the memory
inline void writeMemory(u16 addr, u8 value) {
  local u32 page = addr >> 13;
  local u32 offset = addr & 0b0001_1111_1111_1111;
  vmMemory[blockLookupTable[page].writePtr + offset] = value;
}
