// ============================================================================
// Cambridge Z88 Blink routines
// ============================================================================

// ----------------------------------------------------------------------------
// Blink constants and variables

const u8 COM_SRUN = 0x80;    // Bit 7, SRUN
const u8 COM_SBIT = 0x40;    // Bit 6, SBIT
const u8 COM_OVERP = 0x20;   // Bit 5, OVERP
const u8 COM_RESTIM = 0x10;  // Bit 4, RESTIM
const u8 COM_PROGRAM = 0x08; // Bit 3, PROGRAM
const u8 COM_RAMS = 0x04;    // Bit 2, RAMS
const u8 COM_VPPON = 0x02;   // Bit 1, VPPON
const u8 COM_LCDON = 0x01;   // Bit 0, LCDON

// BLINK Command Register
global u8 COM;

// EPR, Eprom Programming Register
global u8 EPR;

// ----------------------------------------------------------------------------
// Blink methods

// Resets main Blink registers
void resetBlink() {
  resetScreen();

  COM = 0;

  resetRtc();

  setINT(INT_FLAP | INT_TIME | INT_GINT);
  TMK = TMK_TICK;  
  setSTA(0);
  TSTA = 0;

  resetMemory();
}

// Raises the battery low signal
export void raiseBatteryLow() {
  setSTA(STA | STA_BTL);
}

// Set the value of INT
void setINT(u32 v) {
  INT = v;
  checkMaskableInterruptRequested();
}

// Sets the value of COM
void setCOM(u32 v) {
  // --- Set the register value
  COM = v & 0xff;

  // --- Reset the timer when requested
  if (v & COM_RESTIM) {
    resetRtc();
  }

  // --- Set the last beeper bit 
  if (!(v & COM_SRUN)) {
    beeperLastEarBit = v & COM_SBIT;
  }

  // --- RAMS flag may change, s0 emulate setting SR0 again
  setSR0(segmentRegs[0]);
}

// ============================================================================
// Blink test methods

export void testSetZ88INT(u8 value) {
  INT = value;
}

export void testSetZ88STA(u8 value) {
  STA = value;
}

export void testSetZ88COM(u8 value) {
  COM = value;
}
