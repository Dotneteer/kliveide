{
  "scopeName": "source.z80asm.klive",
  "patterns": [
    { "name": "comment.line.klive", "match": "(;|//).*$" },
    { "name": "comment.block.klive", "match": "/\\*.*\\*/" },
    {
      "name": "keyword.control.klive",
      "match": "(nop|NOP|rlca|RLCA|rrca|RRCA|rla|RLA|rra|RRA|daa|DAA|cpl|CPL|scf|SCF|ccf|CCF|halt|HALT|exx|EXX|di|DI|ei|EI|neg|NEG|retn|RETN|reti|RETI|rld|RLD|rrd|RRD|ldi|LDI|cpi|CPI|ini|INI|outi|OUTI|ldd|LDD|cpd|CPD|ind|IND|outd|OUTD|ldir|LDIR|cpir|CPIR|inir|INIR|otir|OTIR|lddr|LDDR|cpdr|CPDR|indr|INDR|otdr|OTDR|ld|LD|inc|INC|dec|DEC|ex|EX|add|ADD|adc|ADC|sub|SUB|sbc|SBC|and|AND|xor|XOR|or|OR|cp|CP|djnz|DJNZ|jr|JR|jp|JP|call|CALL|ret|RET|rst|RST|push|PUSH|pop|POP|in|IN|out|OUT|im|IM|rlc|RLC|rrc|RRC|rl|RL|rr|RR|sla|SLA|sra|SRA|sll|SLL|srl|SRL|bit|BIT|res|RES|set|SET|ldix|LDIX|ldws|LDWS|ldirx|LDIRX|lddx|LDDX|lddrx|LDDRX|ldpirx|LDPIRX|outinb|OUTINB|mul|MUL|swapnib|SWAPNIB|mirror|MIRROR|nextreg|NEXTREG|pixeldn|PIXELDN|pixelad|PIXELAD|setae|SETAE|test|TEST|bsla|BSLA|bsra|BSRA|bsrl|BSRL|bsrf|BSRF|brlc|BRLC)(?=[\\s\"\\#%&'\\(\\)\\*\\+-,/:;<=>\\[\\]\\\\\\^`\\{\\}\\|])"
    },
    {
      "name": "variable.parameter.registers.klive",
      "match": "(af|af'|a|f|bc|b|c|de|d|e|hl|h|l|i|r|sp|xh|ixh|xl|ixl|ix|yh|yl|iyh|iyl|iy|AF|AF'|A|F|BC|B|C|DE|D|E|HL|H|L|I|R|SP|XH|IXH|IXh|XL|IXL|IXl|IX|YH|YL|IYH|IYh|IYL|IYl|IY)(?=[\\s\"\\#%&\\(\\)\\*\\+-,/:;<=>\\[\\]\\\\\\^`\\{\\}\\|])"
    },
    {
      "name": "variable.language.condition.klive",
      "match": "^(\\b[0-9]*(\\.[0-9]*)?([eE][+-]?[0-9]+)\\b)(z|Z|nz|NZ|nc|NC|po|PO|pe|PE|p|P|m|M)\\b"
    },
    {
      "name": "constant.numeric.real.klive",
      "match": "\\b[0-9]*(\\.[0-9]*)?([eE][+-]?[0-9]+)\\b"
    },
    { "name": "constant.numeric.klive", "match": "\\b[0-9]+\\b" },
    {
      "name": "constant.numeric.octal.klive",
      "match": "\\b[0-7]{1,6}(o|O|q|Q)\\b"
    },
    {
      "name": "constant.numeric.hexadecimal.klive",
      "match": "((\\$|\\#|0x)[0-9A-Fa-f]{1,4}\\b|\\b[0-9][0-9A-Fa-f]{1,4}(h|H))"
    },
    { "name": "constant.numeric.binary.klive", "match": "\\%[01_]*\\b" },
    {
      "name": "constant.numeric.boolean.klive",
      "match": "(true|TRUE|false|FALSE|\\.false|\\.FALSE|\\.true|\\.TRUE)\\b"
    },
    { "name": "string.quoted.double.klive", "match": "\\%[01_]*\\b" },
    {
      "begin": "\"",
      "end": "\"|$",
      "name": "string.quoted.double.klive",
      "patterns": [
        {
          "match": "\\\\([ipfbIoatPC'\"0]|\\\\|x[0-9A-Fa-f]{2})",
          "name": "constant.character.escape"
        }
      ]
    },
    {
      "match": "'\\\\([ipfbIoatPC'\"0]|\\\\|x[0-9A-Fa-f]{2})'",
      "name": "constant.character.escape.klive"
    },
    {
      "match": "'.'",
      "name": "string.quoted.single.klive"
    },
    {
      "name": "variable.language.pragma.klive",
      "match": "(\\.org|\\.ORG|org|ORG|\\.bank|\\.BANK|bank|BANK|\\.xorg|\\.XORG|xorg|XORG|\\.ent|\\.ENT|ent|ENT|\\.xent|\\.XENT|xent|XENT|\\.equ|\\.EQU|equ|EQU|\\.var|\\.VAR|var|VAR|\\.disp|\\.DISP|disp|DISP|\\.defb|\\.DEFB|defb|DEFB|\\.db|\\.DB|db|DB|\\.defw|\\.DEFW|defw|DEFW|\\.dw|\\.DW|dw|DW|\\.defm|\\.DEFM|defm|DEFM|\\.dm|\\.DM|dm|DM|\\.defn|\\.DEFN|defn|DEFN|\\.dn|\\.DN|dn|DN|\\.defh|\\.DEFH|defh|DEFH|\\.dh|\\.DH|dh|DH|\\.defs|\\.DEFS|defs|DEFS|\\.ds|\\.DS|ds|DS|\\.defc|\\.DEFC|defc|DEFC|\\.dc|\\.DC|dc|DC|\\.defg|\\.DEFG|defg|DEFG|\\.dg|\\.DG|dg|DG|\\.defgx|\\.DEFGX|defgx|DEFGX|\\.dgx|\\.DGX|dgx|DGX|\\.skip|\\.SKIP|skip|SKIP|\\.extern|\\.EXTERN|extern|EXTERN|\\.fillb|\\.FILLB|fillb|FILLB|\\.fillw|\\.FILLW|fillw|FILLW|\\.model|\\.MODEL|model|MODEL|\\.injectopt|\\.INJECTOPT|injectopt|INJECTOPT|\\.align|\\.ALIGN|align|ALIGN|\\.trace|\\.TRACE|trace|TRACE|\\.tracehex|\\.TRACEHEX|tracehex|TRACEHEX|\\.rndseed|\\.RNDSEED|rndseed|RNDSEED|\\.error|\\.ERROR|error|ERROR|\\.includebin|\\.INCLUDEBIN|includebin|INCLUDEBIN|\\.include_bin|\\.INCLUDE_BIN|include_bin|INCLUDE_BIN|\\.incbin|\\.INCBIN|incbin|INCBIN|\\.comparebin|\\.COMPAREBIN|comparebin|COMPAREBIN|\\.zxbasic|\\.ZXBASIC|zxbasic|ZXBASIC)\\b"
    },
    {
      "name": "variable.parameter.klive",
      "match": "(\\.macro|\\.MACRO|macro|MACRO|\\.mend|\\.MEND|mend|MEND|\\.proc|\\.PROC|proc|PROC|\\.endp|\\.ENDP|endp|ENDP|\\.pend|\\.PEND|pend|PEND|\\.loop|\\.LOOP|loop|LOOP|\\.endl|\\.ENDL|endl|ENDL|\\.lend|\\.LEND|lend|LEND|\\.repeat|\\.REPEAT|repeat|REPEAT|\\.until|\\.UNTIL|until|UNTIL|\\.while|\\.WHILE|while|WHILE|\\.endw|\\.ENDW|endw|ENDW|\\.wend|\\.WEND|wend|WEND|\\.ifused|\\.IFUSED|ifused|IFUSED|\\.ifnused|\\.IFNUSED|ifnused|IFNUSED|\\.if|\\.IF|if|IF|\\.elif|\\.ELIF|elif|ELIF|\\.else|\\.ELSE|else|ELSE|\\.endif|\\.ENDIF|endif|ENDIF|\\.for|\\.FOR|for|FOR|\\.to|\\.TO|to|TO|\\.step|\\.STEP|step|STEP|\\.next|\\.NEXT|next|NEXT|\\.break|\\.BREAK|break|BREAK|\\.continue|\\.CONTINUE|continue|CONTINUE|\\.endmodule|\\.ENDMODULE|endmodule|ENDMODULE|\\.endscope|\\.ENDSCOPE|endscope|ENDSCOPE|\\.moduleend|\\.MODULEEND|moduleend|MODULEEND|\\.scopeend|\\.SCOPEEND|scopeend|SCOPEEND|\\.struct|\\.STRUCT|struct|STRUCT|\\.ends|\\.END|ends|ENDS|\\.local|\\.LOCAL|local|LOCAL|Local|\\.endm|\\.ENDM|endm|ENDM|\\.module|\\.MODULE|module|MODULE|\\.scope|\\.SCOPE|scope|SCOPE)\\b"
    },
    {
      "name": "entity.name.tag.klive",
      "match": "(textof|TEXTOF|ltextof|LTEXTOF|hreg|HREG|lreg|LREG|def|DEF|isreg8|ISREG8|isreg8std|ISREG8STD|isreg8spec|ISREG8SPEC|isreg8idx|ISREG8IDX|isreg16|ISREG16|isreg16std|ISREG16STD|isreg16idx|ISREG16IDX|isregindirect|ISREGINDIRECT|iscport|ISCPORT|isindexedaddr|ISINDEXEDADDR|iscondition|ISCONDITION|isexpr|ISEXPR|isregaf|ISREGAF|isrega|ISREGA|isregbc|ISREGBC|isregb|ISREGB|isregc|ISREGC|isregde|ISREGDE|isregd|ISREGD|isrege|ISREGE|isreghl|ISREGHL|isregh|ISREGH|isregl|ISREGL|isregi|ISREGI|isregr|ISREGR|isregsp|ISREGSP|isregxh|ISREGXH|isregxl|ISREGXL|isregix|ISREGIX|isregyh|ISREGYH|isregyl|ISREGYL|isregiy|ISREGIY|\\$cnt|\\$CNT|\\.cnt|\\.CNT)\\b"
    },
    {
      "name": "entity.other.klive",
      "match": "(#ifdef|#ifndef|#define|#undef|#ifmod|#ifnmod|#endif|#else|#if|#include|#line)\\b"
    },
    {
      "begin": "{{",
      "end": "}}|$",
      "name": "keyword.control.macroparam.klive",
      "patterns": [
        {
          "match": "[_@`a-zA-Z][_@!?\\.0-9A-Za-z]*",
          "name": "support.function.paramname.klive"
        }
      ]
    },
    {
      "name": "support.function.klive",
      "match": "[\\._@`a-zA-Z][_@!?\\.0-9A-Za-z]*"
    }
  ]
}
